(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{329:function(t,s,e){t.exports=e.p+"assets/img/commit_and_push.92d6456b.png"},363:function(t,s,e){t.exports=e.p+"assets/img/new_project_1.14ba95f9.png"},364:function(t,s,e){t.exports=e.p+"assets/img/new_project_2.abec280a.png"},365:function(t,s,e){t.exports=e.p+"assets/img/new_project_3.9d67caca.png"},366:function(t,s,e){t.exports=e.p+"assets/img/new_project_4.9b63c751.png"},367:function(t,s,e){t.exports=e.p+"assets/img/new_project_5.2f6ff250.png"},368:function(t,s,e){t.exports=e.p+"assets/img/new_project_6.d3548fcb.png"},369:function(t,s,e){t.exports=e.p+"assets/img/new_branch_1.a44da173.png"},370:function(t,s,e){t.exports=e.p+"assets/img/new_branch_2.3ab5698f.png"},371:function(t,s,e){t.exports=e.p+"assets/img/new_branch_3.b7e4f999.png"},372:function(t,s,e){t.exports=e.p+"assets/img/new_branch_4.1590d25f.png"},373:function(t,s,e){t.exports=e.p+"assets/img/new_branch_5.bff6967c.png"},374:function(t,s,e){t.exports=e.p+"assets/img/new_branch_6.cddc6d56.png"},375:function(t,s,e){t.exports=e.p+"assets/img/new_branch_7.f4998d9e.png"},376:function(t,s,e){t.exports=e.p+"assets/img/new_step_1.8ba5354a.png"},377:function(t,s,e){t.exports=e.p+"assets/img/new_step_wrong_2.b1667bd5.png"},378:function(t,s,e){t.exports=e.p+"assets/img/new_step_wrong_4.8aabe7f3.png"},379:function(t,s,e){t.exports=e.p+"assets/img/new_step_wrong_5.77562812.png"},380:function(t,s,e){t.exports=e.p+"assets/img/new_step_6.14c62c87.png"},381:function(t,s,e){t.exports=e.p+"assets/img/new_step_7.8bc2c571.png"},382:function(t,s,e){t.exports=e.p+"assets/img/new_step_8.7024734e.png"},383:function(t,s,e){t.exports=e.p+"assets/img/new_file.24ad10bc.png"},384:function(t,s,e){t.exports=e.p+"assets/img/commt_files.3560eb4c.png"},385:function(t,s,e){t.exports=e.p+"assets/img/mistake.2bac3756.png"},386:function(t,s,e){t.exports=e.p+"assets/img/commit_reset_1.93456d00.png"},387:function(t,s,e){t.exports=e.p+"assets/img/commit_reset_2.50022743.png"},388:function(t,s,e){t.exports=e.p+"assets/img/commit_right_1.2ecc8486.png"},389:function(t,s,e){t.exports=e.p+"assets/img/commit_right_2.2ef03af3.png"},390:function(t,s,e){t.exports=e.p+"assets/img/commit_right_3.98d472b5.png"},391:function(t,s,e){t.exports=e.p+"assets/img/commit_and_push_2.c8c3407d.png"},392:function(t,s,e){t.exports=e.p+"assets/img/commit_right_4.79b864e4.png"},393:function(t,s,e){t.exports=e.p+"assets/img/commit_right_5.30ea7c60.png"},394:function(t,s,e){t.exports=e.p+"assets/img/pr_1.2866ab35.png"},395:function(t,s,e){t.exports=e.p+"assets/img/pr_2.07239af9.png"},396:function(t,s,e){t.exports=e.p+"assets/img/pr_3.95a1c560.png"},397:function(t,s,e){t.exports=e.p+"assets/img/pr_4.e2fc7e1a.png"},398:function(t,s,e){t.exports=e.p+"assets/img/pr_5.b7601907.png"},549:function(t,s,e){"use strict";e.r(s);var _=e(44),r=Object(_.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"step01"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#step01"}},[t._v("#")]),t._v(" step01")]),t._v(" "),_("p",[t._v("한 레파지토리에 자신의 이름의 브랜치를 만든다음"),_("br"),t._v("\n자신의 브랜치에서 step 가지를 생성하는 방법을 시도해 보는것도 좋은것 같아 방법을 바꾸게 되었습니다"),_("br"),t._v("\n브랜치 여러개 쓰다보면 실수도 할 수 있는데, 실전에서, 브랜치 실수에 대한 대응력을 키워보는 효과도 있다고 생각합니다.")]),t._v(" "),_("h2",{attrs:{id:"점검-사항"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#점검-사항"}},[t._v("#")]),t._v(" 점검 사항")]),t._v(" "),_("ol",[_("li",[t._v("원격 브랜치와 로컬 브랜치의 차이점을 알고 있는가?")]),t._v(" "),_("li",[t._v("브랜치의 개념을 알고 있는가?\n등..")])]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://backlog.com/git-tutorial/kr/intro/intro1_1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("누구나 쉽게 이해할 수 있는 git 입문"),_("OutboundLink")],1),t._v("\n여기에서 git 의 기초개념을 반드시 공부하고 오세요!!")])]),t._v(" "),_("h2",{attrs:{id:"개요"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#개요"}},[t._v("#")]),t._v(" 개요")]),t._v(" "),_("ul",[_("li",[t._v("step01 branch 를 새로 생성합니다.")]),t._v(" "),_("li",[t._v("step01 브랜치로 checkout 하여 작업하기")])]),t._v(" "),_("ol",[_("li",[t._v("파일을 로컬에 생성\n"),_("ul",[_("li",[t._v("index.html 생성")]),t._v(" "),_("li",[t._v("src 폴더 생성")]),t._v(" "),_("li",[t._v("src/App.js")]),t._v(" "),_("li",[t._v("src/main.js")])])])]),t._v(" "),_("ul",[_("li",[t._v("step01 -> githubID 브랜치로 PR 하기")])]),t._v(" "),_("h2",{attrs:{id:"가이드"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#가이드"}},[t._v("#")]),t._v(" 가이드")]),t._v(" "),_("p",[t._v("mac os 기준입니다.")]),t._v(" "),_("h3",{attrs:{id:"_1-github-원격-저장소의-프로젝트로-새로운-프로젝트를-시작합니다"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-github-원격-저장소의-프로젝트로-새로운-프로젝트를-시작합니다"}},[t._v("#")]),t._v(" 1. github 원격 저장소의 프로젝트로 새로운 프로젝트를 시작합니다.")]),t._v(" "),_("p",[_("img",{attrs:{src:e(363),alt:""}}),t._v(" "),_("img",{attrs:{src:e(364),alt:""}}),t._v(" "),_("img",{attrs:{src:e(365),alt:""}})]),t._v(" "),_("ul",[_("li",[t._v("프로젝트를 open 해 주세요.\n"),_("img",{attrs:{src:e(366),alt:""}})])]),t._v(" "),_("h3",{attrs:{id:"_2-내-이름의-branch-생성하기"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-내-이름의-branch-생성하기"}},[t._v("#")]),t._v(" 2. 내 이름의 Branch 생성하기")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("프로젝트가 open 이 되었고 우측 하단에 "),_("code",[t._v("현재 브랜치")]),t._v("가 "),_("code",[t._v("Master")]),t._v(" 임을 확인 할 수 있습니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(367),alt:""}})])]),t._v(" "),_("li",[_("p",[_("code",[t._v("Git:master")]),t._v(" 버튼을 누르면 "),_("code",[t._v("로컬(local)")]),t._v("과 "),_("code",[t._v("원격(remote)")]),t._v(" 프로젝트에 존재하는 모든 브랜치를 확인할 수 있습니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(368),alt:""}})])]),t._v(" "),_("li",[_("p",[_("code",[t._v("Remote Branches > origin/master > New Branch from Selected...")]),t._v(" 를 선택하고 "),_("code",[t._v("github id")]),t._v("이름의 새로운 branch 를 생성합니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(369),alt:""}}),t._v(" "),_("img",{attrs:{src:e(370),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("브랜치를 생성하고 checkout 을 했으므로 현재 브랜치가 "),_("code",[t._v("eyabc")]),t._v(" 로 변경되었습니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(371),alt:""}})])]),t._v(" "),_("li",[_("p",[_("code",[t._v("local")]),t._v(" 에 eyabc 라는 새로운 Branch 가 생성되었음을 확인할 수 있습니다.\n아직 "),_("code",[t._v("remote")]),t._v(" 에는 eyabc branch 가 없습니다.\n로컬에 생성된 eyabc 의 브랜치를, github 저장소에 있는 레파지토리(remote) 에 반영을 해야 합니다.\n기억 하시나요? 일전에 master 에서 branch 를 생성할 때 local branch 가 아닌 remote branch 에서 branch 를 생성했었습니다.\n따라서 eyabc 에서 'step01' 의 브랜치를 만들려면. 일단 remote branch 에 eyabc branch 가 있어야 합니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(372),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("다음은 local 의 eyabc 브랜치를 remote 에 반영할 차례 입니다.")])]),t._v(" "),_("li",[_("p",[t._v("push 를 통하여 remote 브랜치에 반영할 수 있습니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(373),alt:""}}),t._v(" "),_("img",{attrs:{src:e(374),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("push 를 하고 나면 remote branch 에 eyabc 라는 브랜치가 생성 됐음을 확인할 수 있습니다.\ngithub 저장소에서도 확인할 수 있어요.\n"),_("img",{attrs:{src:e(375),alt:""}})])])]),t._v(" "),_("h3",{attrs:{id:"_3-step01-브랜치-생성"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-step01-브랜치-생성"}},[t._v("#")]),t._v(" 3. step01 브랜치 생성")]),t._v(" "),_("p",[t._v("우리는 같은 저장소(CatSearch)를 공유 합니다. 이럴 경우. 실수로 다른 사람의 branch 를 침범하거나\n원격 저장소에 나쁜짓을 하게 될 수가 있습니다. 그래서 Fork 라는 기능을 사용해 carSearch 를 복사(Fork)\n해서 작업하는 안전한 방법이 있는데요. 하지만 이번 프로젝트를 하면서 Fork 를 하지 않고 같은 저장소를 사용할 것입니다.\n저장소를 사용을 하다가 문제점을 직접 느끼게 되면 Fork 를 하는 방식으로 개선해 봅시다.")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("remote 의 eyabc 브랜치에서 새로운 branch step01 를 생성합니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(376),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("잘못된 예 1: branch 이름을 'step01' 이라고만 적으면,\neyabc 브랜치에서 step01 을 이미 만들면, JeongShing 브랜치에서 step01 을 만들 수 없게 됩니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(377),alt:""}})])])]),t._v(" "),_("p",[t._v("그렇기 때문에 브랜치의 이름을 step01 이라고 쓰지 않습니다.")]),t._v(" "),_("p",[t._v("step 01 의 브랜치를 삭제하는 방법은, local branch 에 Step01 브랜치가 생성될텐데,\n현재 브랜치를 step01 이 아닌 master 나 "),_("code",[t._v("이외의 브랜치로 checkout")]),t._v(" 해준 다음에,\nlocal 에 있는 "),_("code",[t._v("step01 브랜치 > delete")]),t._v(" 해 줍니다.\n현재의 브랜치를 삭제하려면, 다른 브랜치에서 checkout 한 후 지울 수 있습니다.")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("잘못된 예 2: "),_("code",[t._v("eyabc/step01")]),t._v("\n분기 b가 존재 하면 이름이 지정된 분기를 b/anything 작성할 수 없습니다.\n"),_("a",{attrs:{href:"https://stackoverflow.com/questions/22630404/git-push-refs-heads-my-subbranch-exists-cannot-create",target:"_blank",rel:"noopener noreferrer"}},[t._v("🔗"),_("OutboundLink")],1),_("br"),t._v(" "),_("img",{attrs:{src:e(378),alt:""}}),t._v(" "),_("img",{attrs:{src:e(379),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("옳은 예: "),_("code",[t._v("_eyabc/step01")]),t._v(" 자신의 이름에 "),_("code",[t._v("_")]),t._v(" underbar 를 붙여줍니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(380),alt:""}})])])]),t._v(" "),_("p",[t._v("로컬에 성공적으로 branch 가 생성되었습니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(381),alt:""}})]),t._v(" "),_("p",[t._v("현재 브랜치는 _eyabc/step01 입니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(382),alt:""}})]),t._v(" "),_("h3",{attrs:{id:"_4-name-step01-에서-코딩하기"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-name-step01-에서-코딩하기"}},[t._v("#")]),t._v(" 4. _name/step01 에서 코딩하기")]),t._v(" "),_("ul",[_("li",[t._v("index.html 생성")]),t._v(" "),_("li",[t._v("src 폴더 생성")]),t._v(" "),_("li",[t._v("src/App.js")]),t._v(" "),_("li",[t._v("src/main.js")])]),t._v(" "),_("p",[_("img",{attrs:{src:e(383),alt:""}})]),t._v(" "),_("ul",[_("li",[_("p",[t._v("생성한 파일을 commit 합니다. 맥 기준으로 "),_("code",[t._v("command + k")]),t._v(" 단축키를 이용할 수 있습니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(384),alt:""}})]),t._v(" "),_("ol",[_("li",[t._v("파일 목록을 꼼꼼히 확인")]),t._v(" "),_("li",[t._v("파일 목록의 내용을 꼼꼼히 확인")]),t._v(" "),_("li",[t._v("커밋 메세지 작성")]),t._v(" "),_("li",[t._v("commit 버튼 클릭")])])]),t._v(" "),_("li",[_("p",[t._v("화살표를 클릭하면 commit 과 동시에 push 창을 띄어주는 것을 연속으로 할 수 있는 기능을 볼 수 있습니다."),_("br"),t._v("\n일단 화살표의 option 을 선택하지 않고 commit 버튼을 눌러 줍니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(329),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("push 기능은 우측 하단의 현재 브랜치 버튼을 누르면 이용할 수 있는데요."),_("br"),t._v("\n앗 이런, step01 에서 작업을 해야 하는데 eyabc 에서 작업을 하고 있었습니다.")])])]),t._v(" "),_("p",[_("img",{attrs:{src:e(385),alt:""}})]),t._v(" "),_("ul",[_("li",[_("p",[t._v("인텔리제이의 terminal 을 열어 명령어 "),_("code",[t._v("$ git reset --soft HEAD^")]),t._v(" 를 입력해줍니다. "),_("a",{attrs:{href:"https://eyabc.github.io/TIL/development/Tools/Git/git.html#%EB%A7%88%EC%A7%80%EB%A7%89-%EC%BB%A4%EB%B0%8B-%EC%B7%A8%EC%86%8C%ED%95%98%EA%B8%B0",target:"_blank",rel:"noopener noreferrer"}},[t._v("🔗"),_("OutboundLink")],1),t._v("\n이 명령어는 마지막 커밋을 취소하고 작업 디렉토리와 인덱스를 보존해 파일이 스테이지된 상태를 유지하도록 합니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(386),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("commit 이 취소 되어 파일들이 초록색으로 되었습니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(387),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("이제 _eyabc/step01 브랜치로 체크아웃 합니다. eyabc 에서 commit 되지 않은 파일들은\nstep01 브랜치로 체크아웃 되면서 step01 에서 작업한 파일들처럼 이용할 수 있습니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(388),alt:""}}),t._v(" "),_("img",{attrs:{src:e(389),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("_eyabc/step01 에서 파일들을 commit 합니다.\n"),_("img",{attrs:{src:e(390),alt:""}})])])]),t._v(" "),_("p",[t._v("a. "),_("code",[t._v("commit and push")]),t._v(" 를 이용하거나\n"),_("img",{attrs:{src:e(329),alt:""}})]),t._v(" "),_("p",[t._v("b. 현재 브랜치 메뉴에서 push 를 할 수 있습니다.\n"),_("img",{attrs:{src:e(391),alt:""}})]),t._v(" "),_("ul",[_("li",[_("p",[_("code",[t._v("commit and push")]),t._v(" 혹은 현재 브랜치 메뉴에서 "),_("code",[t._v("push")]),t._v(" 버튼을 누르면 아래의 push 창이 뜹니다.\n"),_("img",{attrs:{src:e(392),alt:""}})]),t._v(" "),_("ol",[_("li",[_("code",[t._v("_eyabc/step01 -> origin: _eyabc/step01 (new)")]),t._v(" "),_("ul",[_("li",[t._v("화살표의 왼쪽은 로컬에서의 branch")]),t._v(" "),_("li",[t._v("화살표의 오른쪽은 원격에서의 branch 를 의미합니다.")]),t._v(" "),_("li",[t._v("원격에는 아직 _eyabc/step01 브랜치가 없기 때문에 new 라는 표시가 있습니다.")])])]),t._v(" "),_("li",[t._v("commit 내역들을 다시한번 꼼꼼히 확인해 주세요.")]),t._v(" "),_("li",[t._v("push 버튼을 누릅니다.")])])]),t._v(" "),_("li",[_("p",[t._v("원격 Branch 에 _eyabc/step01 이 생성된 것을 확인할 수 있습니다.\n"),_("img",{attrs:{src:e(393),alt:""}})])])]),t._v(" "),_("h3",{attrs:{id:"_5-pr-작성하기"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-pr-작성하기"}},[t._v("#")]),t._v(" 5. PR 작성하기")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("github 의 catSearch 레파지토리의 Pull Request 탭에 들어옵니다. "),_("code",[t._v("compare and pull request")]),t._v(" 를 누릅니다.\n"),_("img",{attrs:{src:e(394),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("PR 를 작성합니다.\n"),_("img",{attrs:{src:e(395),alt:""}})]),t._v(" "),_("ol",[_("li",[t._v("PR 의 방향은 "),_("code",[t._v("eyabc(이름) <= step01")]),t._v(" 을 향하도록 합니다.")]),t._v(" "),_("li",[t._v("PR "),_("code",[t._v("제목")]),t._v("을 작성합니다.")]),t._v(" "),_("li",[_("code",[t._v("assignees")]),t._v(" 에 "),_("code",[t._v("eyabc")]),t._v(" 를 등록합니다.")]),t._v(" "),_("li",[_("code",[t._v("Create pull Request")]),t._v(" 를 누릅니다.")])])]),t._v(" "),_("li",[_("p",[t._v("PR 의 요청이 완료 되었고. assignee 가 PR 를 리뷰하고 피드백 하는 과정을 마친 후에 제가 Merge 를 해줍니다."),_("br"),t._v(" "),_("img",{attrs:{src:e(396),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("merge 된 PR"),_("br"),t._v(" "),_("img",{attrs:{src:e(397),alt:""}})])]),t._v(" "),_("li",[_("p",[t._v("step01 의 내용이 eyabc 브랜치에 성공적으로 merge 된 것을 확인할 수 있습니다.\n"),_("img",{attrs:{src:e(398),alt:""}})])])])])}),[],!1,null,null,null);s.default=r.exports}}]);