(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{541:function(s,t,a){"use strict";a.r(t);var n=a(44),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"to-형욱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#to-형욱"}},[s._v("#")]),s._v(" To 형욱")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("constructor : 객체가 만들어지기 직전에 실행되기로 약속된 함수\n\ncase 1) class를 이용한 생성자함수 사용법\n\nclass Person{\n    constructor(name, first, second){\n        this.name = name;\n        this.first = first;\n        this.second = second;\n    }\n}\n\nvar kim = new Person('kim', 10, 20);        //kim 객체가 만들어지기 전에 constructor가 실행이 되어 값들이 저장된다.\nconsole.log('kim', kim);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("생성자 함수는 new 와 함께 실행이 될 때")]),s._v(" "),a("ol",[a("li",[s._v("{ } 빈 객체가 만들어진다.")]),s._v(" "),a("li",[s._v("생성자 함수가 실행되어 빈 객체를 초기화 한다.")]),s._v(" "),a("li",[s._v("빈 객체를 반환한다.")])]),s._v(" "),a("p",[s._v("step04 에서 정웅님 포스팅을 참고하자면 순서는 다음과 같습니다.")]),s._v(" "),a("ul",[a("li",[s._v("new Person()\n"),a("ul",[a("li",[s._v("새로운 Object 객체 생성")]),s._v(" "),a("li",[a("code",[s._v("obj.__proto__")]),s._v(" 를 "),a("code",[s._v("Person.prototype")]),s._v(" 으로 설정")]),s._v(" "),a("li",[s._v("return Person.call(obj) || obj")])])])]),s._v(" "),a("p",[s._v("일반적으로 obj 가 반환되지만 JS의 생성자 명시적으로 다른 값을 반환 할 수 있습니다.")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("bind()는 어떤함수의 내부적으로 this의 값을 영구적으로 바꾸는 새로운 함수를 만든다.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("bind()는 어떤함수의 내부적으로 this의 값을 영구적으로 바꾸는 새로운 함수를 만들어 반환한다")]),s._v(" "),a("p",[s._v("로 표현하면 더 명확할 것 같습니다.")]),s._v(" "),a("h2",{attrs:{id:"to-유림"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#to-유림"}},[s._v("#")]),s._v(" To 유림")]),s._v(" "),a("p",[s._v("유림님이 형욱님에게 질문한 내용")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Ultra(){}  //생성자\nUltra.prototype.ultraProp = true;\n \nfunction Super(){}\nSuper.prototype = new Ultra();\n \nfunction Sub(){}\nSub.prototype = new Super();\n \nvar o = new Sub();\nconsole.log(o.ultraProp);\n본문의 프로토타입 내용 중 위의 코드에서\nSuper.prototype=new Ultra();를 예로 들면 Ultra생성자를 이용함으로써 Super의 상위 프로토타입이 Ultra가 된다고 제가 이해했는데\n이게 맞는지 궁금합니다!\n\no.ultraProp 에서 ultraProp이란 속성을 찾아 프로토타입 체이닝을 타고 올라가 값을 찾는거죠?\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("실행 결과 o 의 "),a("code",[s._v("__proto__:Ultra")]),s._v(" 임을 확인할 수 있습니다.")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/95018484-09db5a00-069b-11eb-992e-b1798688e2b2.png",alt:"image"}})]),s._v(" "),a("p",[s._v("과정을 차근차근 살펴보면")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("처음 함수가 선언되었 때, 함수의 속성에는 "),a("code",[s._v("prototype")]),s._v(" 과 "),a("code",[s._v("__proto__")]),s._v(" 가 존재합니다.")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Ultra.prototype.contructor")]),s._v(" 는 생성자 함수 자신을 가리킵니다.")]),s._v(" "),a("li",[a("code",[s._v("Ultra.prototype.__proto__")]),s._v(" 는 "),a("code",[s._v("Object")]),s._v(" 를 가리킵니다.")]),s._v(" "),a("li",[a("code",[s._v("Ultra.__proto__")]),s._v(" 는 함수를 가리키고. 이 함수의 proto(원형) 은 Object 임을 알 수 있습니다.")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/95018738-8a4e8a80-069c-11eb-8bb8-377fdba007ac.png",alt:"image"}})])]),s._v(" "),a("li",[a("p",[s._v("그다음 "),a("code",[s._v("Ultra.prototype")]),s._v(" 에 "),a("code",[s._v("ultraProp: true")]),s._v(" 프로퍼티를 추가합니다.")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/95018803-e4e7e680-069c-11eb-9c02-0025b6298024.png",alt:"image"}})])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Super")]),s._v(" 함수 선언은 "),a("code",[s._v("Ultra")]),s._v(" 함수 선언의 초기 상태와 비슷합니다.")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/95018546-68083d00-069b-11eb-8d1a-f5c4f28527ce.png",alt:"image"}})])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Super.prototype = new Ultra();")]),s._v(" 을 실행하기 전에 "),a("code",[s._v("const ultra = new Ultra();")]),s._v(" 를 해서 "),a("code",[s._v("new Ultra()")]),s._v(" 가 무엇을 반환하는지 관찰 할 것입니다.")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/95018556-840bde80-069b-11eb-9a06-5b3e6917bd0c.png",alt:"image"}})]),s._v(" "),a("ul",[a("li",[s._v("ultra 개체는\n"),a("ul",[a("li",[a("code",[s._v("ultra.__proto__")]),s._v(" 프로퍼티 키를 가진다.")]),s._v(" "),a("li",[a("code",[s._v("ultra.__proto__.ultraProp: true")]),s._v(" 를 가진다.")]),s._v(" "),a("li",[a("code",[s._v("ultra.__proto__")]),s._v(" 는 "),a("code",[s._v("Ultra.prototype")]),s._v(" 를 가지고 있네요?")])])])])]),s._v(" "),a("li",[a("p",[s._v("따라서 아래 결과가 이해가 될 겁니다.")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/95019087-72780600-069e-11eb-8089-177b1b01dceb.png",alt:"image"}})])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Sub.prototype = new Super();")]),s._v(" 에서 "),a("code",[s._v("new Super()")]),s._v(" 의 결과는")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/95019195-f205d500-069e-11eb-9d2f-cc64403e4c3c.png",alt:"image"}})])])]),s._v(" "),a("p",[s._v("즉 const 개체 = new 함수() 객체의 "),a("code",[s._v("__proto__")]),s._v(" 가 "),a("code",[s._v("함수.prototype")]),s._v(" 인 것을 반환합니다.")]),s._v(" "),a("p",[s._v("그래서 하위 객체의 prototype 을, 수퍼 객체의 prototype 으로 을 대체할 수 있어요.")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/95019499-b2d88380-06a0-11eb-87cb-de5ab5591b87.png",alt:"image"}})]),s._v(" "),a("p",[s._v("그 과정을 반복하게 되면 이처럼 "),a("code",[s._v("__proto__")]),s._v(" 로 이어진 프로토타입 체인을 볼 수 있습니다.")]),s._v(" "),a("p",[s._v("형욱님이 유림님에게 남긴 댓글")]),s._v(" "),a("p",[s._v("함수에도 "),a("code",[s._v("__proto__")]),s._v(" 가 있습니다.\n"),a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/95020629-385f3200-06a7-11eb-9f90-f2435f6bb0bb.png",alt:"image"}})]),s._v(" "),a("p",[s._v("형욱님 리뷰에 댓글을 남겼었는데 이미 prototype 을 잘 공부 했군요!\n글도 술술 잘 읽혔고, 읽으면서 머릿속에서 정리가 되었습니다")]),s._v(" "),a("h2",{attrs:{id:"to-정웅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#to-정웅"}},[s._v("#")]),s._v(" To 정웅")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Object 에서 프로퍼티가 중복되는 경우 이후에 오는 property 가 overwrite 하게 된다. 따라서 이를 원하지 않은 경우 ECMAScript 5 `strict mode` 를 사용하면 Syntax Error 로 간주 된다.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("ES6 이상에서 중복 프로퍼티는 어떻게 되나요?")]),s._v(" "),a("p",[s._v("deepCopy 내용 감사합니다.")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function deepFreeze(obj) {\n\tconst props = Object.getOwnPropertyNames(obj);\n\t\n\tprops.forEach((name)=> {\n\t\tconst prop = obj[name];\n\t\tif (typeof prop === 'object' && prop !== null){\n\t\t\tdeepFreeze(prop);\n\t\t}\n\t})\n\treturn Object.freeze(obj);\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Object.assign, Object.freeze 를 이용하는 방법은 번거롭고 \n성능 상 이슈가 있어 큰 객체를 대상으로 사용하는 것은 바람직 하지 않다. \n대안으로 `Immutable.js` 를 사용하는 방법이 있다. \n\nImmutable.js 는 List, Stack, Map, OrderedMap, Set, OrderedSet, Record 와 같은 영구 불변 (Permit Immutable) 자료구조를 제공한다.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("Map vs Object 차이 알아보기")]),s._v(" "),a("h3",{attrs:{id:"data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-types"}},[s._v("#")]),s._v(" Data Types")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'apple'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'kiwi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// Map(1) {"apple" => "kiwi"}')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// {3: true}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("code",[s._v("Object")]),s._v(" 는 다음의 데이터 타입을 key 로 가질 수 있다.")]),s._v(" "),a("ul",[a("li",[s._v("String")]),s._v(" "),a("li",[s._v("Symbol")])]),s._v(" "),a("p",[s._v("반면 "),a("code",[s._v("Map")]),s._v(" 은")]),s._v(" "),a("ul",[a("li",[s._v("모든 primitive data type")]),s._v(" "),a("li",[s._v("Object")]),s._v(" "),a("li",[s._v("function")])]),s._v(" "),a("p",[s._v("의 데이터 타입을 key 로 가질 수 있다. (즉, 대부분의 값을 key 로 가질 수 있다)")]),s._v(" "),a("p",[s._v("Iterate")]),s._v(" "),a("p",[s._v("Map 은 "),a("code",[s._v("for ... of")]),s._v(" 문을 통하여 [key, value]  값을 순회 할 수 있다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'one'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'two'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'three'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// [1, "one"]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// [2, "two"]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// [3, "three"] ')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 이를 활용하여 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// console.log(key, value) 와 같이 활용 가능")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"iterate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iterate"}},[s._v("#")]),s._v(" Iterate")]),s._v(" "),a("p",[s._v("Map 은 "),a("code",[s._v("for ... of")]),s._v(" 문을 통하여 [key, value]  값을 순회 할 수 있다.")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'one'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'two'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'three'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// [1, "one"]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// [2, "two"]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// [3, "three"] ')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 이를 활용하여 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// console.log(key, value) 와 같이 활용 가능")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("와 같이 Object.entries(), keys(), values() 로 순회가 가능한데 이는 Object 의 key, value 값을 배열 형태로 가져온다. 또한 삽입 했을 때의 order 가 보장되지 않는다 (대부분의 경우 order 가 삽입 순으로 출력 되지만 보장은 안된다고 합니다). 따라서 순서가 중요하다면 sorting 을 따로 해줘야 한다.")]),s._v(" "),a("p",[s._v("-> 보장이 안되는 경우는 정수를 넣었을 때 (정수가 문자열로 변환 되기는함) 정수 순으로 정렬된다고 합니다")]),s._v(" "),a("p",[s._v("반면 Map 은 delete 메서드가 있어")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[s._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 삭제 여부에 따라 false, true 를 반환 (false 는 해당 값이 없는 경우)")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" size "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" size "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("size\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("Map 은 잦은 key, value 삽입, 삭제에 빠른 성능을 보인다. (내부적 optimization 으로 인한)\n반면 Object 는 따로 삽입 삭제에 대한 성능 향상이 없다.")]),s._v(" "),a("p",[s._v("-> 경험에서 우러난 조언 감사합니다 굿굿")]),s._v(" "),a("h3",{attrs:{id:"추천-사용-시기-😆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#추천-사용-시기-😆"}},[s._v("#")]),s._v(" 추천 사용 시기 😆")]),s._v(" "),a("p",[s._v("Object : JSON 을 다룰때는 Object 를 사용한다. 이는 Object, Map 모두 키 값을 String 만 허용되기 때문에 더 안전하다.")]),s._v(" "),a("p",[s._v("Map : 삽입 순서 ordring 보장 되어야 하거나 data-type 이 복잡한 경우 Map 을 사용한다.")])])}),[],!1,null,null,null);t.default=e.exports}}]);