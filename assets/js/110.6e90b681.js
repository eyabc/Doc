(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{515:function(a,e,s){"use strict";s.r(e);var t=s(44),v=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scope"}},[a._v("#")]),a._v(" scope")]),a._v(" "),s("p",[a._v("참조 대상 식별자(변수)를 찾아내기 위한 규칙")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("식별자는 자신을 참조할 수 있는 범위 (렉시컬 환경)를 갖는다.")])]),a._v(" "),s("li",[s("p",[a._v("스코프는 식별자 이름의 충돌을 방지")])]),a._v(" "),s("li",[s("p",[a._v("어떠한 변수가 스코프 안에 선언됐을때,\n해당 스코프 안에서는 변수에 접근해서 읽거나 쓸 수 있고, 스코프 밖에서는 해당 변수에 접근할 수 없다.")])])]),a._v(" "),s("h2",{attrs:{id:"스코프의-구분"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#스코프의-구분"}},[a._v("#")]),a._v(" 스코프의 구분")]),a._v(" "),s("p",[s("code",[a._v("전역 스코프")]),a._v("\n코드 어디에서든 참조 가능")]),a._v(" "),s("p",[s("code",[a._v("지역 스코프(Local Scope/Function-level Scope)")]),a._v("\n함수 코드 블록이 만든 스코프")]),a._v(" "),s("ul",[s("li",[a._v("변수 관점")])]),a._v(" "),s("p",[s("code",[a._v("전역 변수")]),a._v(" 전역에서 선언된 변수, 어디든 참조 가능")]),a._v(" "),s("p",[s("code",[a._v("지역 변수")]),a._v(" 지역(함수) 내에서 선언된 변수, 지역의 하부 지역에서만 참조 가능")]),a._v(" "),s("h2",{attrs:{id:"전역-스코프"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#전역-스코프"}},[a._v("#")]),a._v(" 전역 스코프")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("var")]),a._v(" 키워드로 선언한 "),s("code",[a._v("전역변수")]),a._v("는 "),s("code",[a._v("브라우저")]),a._v("에서 전역객체 "),s("code",[a._v("window의 프로퍼티")]),a._v("이다.")]),a._v(" "),s("li",[a._v("자바스크립트는 타 언어와 달리, 특별한 시작점(Entry Point)가 없어서 전역에 변수나 함수를 선언하기 쉽다.\n"),s("ul",[s("li",[a._v("c 언어의 경우 main 이 함수의 시작점")])])]),a._v(" "),s("li",[a._v("전역 변수의 사용은 변수이름의 중복이 될 수 있다.\n"),s("ul",[s("li",[a._v("의도치 않은 재할당에 의해 코드를 예측하기 어렵게 만든다.")])])])]),a._v(" "),s("h2",{attrs:{id:"블록-레벨-스코프-block-level-scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#블록-레벨-스코프-block-level-scope"}},[a._v("#")]),a._v(" 블록 레벨 스코프 (block-level scope)")]),a._v(" "),s("p",[a._v("if, while, for { ... }")]),a._v(" "),s("h3",{attrs:{id:"switch-안에서의-let과-const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch-안에서의-let과-const"}},[a._v("#")]),a._v(" Switch 안에서의 let과 const"),s("a",{attrs:{href:"https://wonism.github.io/block-scope-in-switch/",target:"_blank",rel:"noopener noreferrer"}},[a._v("🔗"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("code",[a._v("case")]),a._v(" 문은 별도의 Lexical Scope가 없다.\n(Uncaught SyntaxError: Identifier 'foo' has already been declared)")]),a._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("switch (foo) {\n  case 1:\n    let foo = 1;\n    break;\n  case 2:\n    const foo = 2;\n    break;\n  /* ... */\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("블록 스코프가 필요한 곳의 case 문을 {} 로 감싼다.")]),a._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  case 1: {\n    let foo = 1;\n    break;\n  }\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h2",{attrs:{id:"함수-레벨-스코프-function-level-scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#함수-레벨-스코프-function-level-scope"}},[a._v("#")]),a._v(" 함수 레벨 스코프 (Function-level scope)")]),a._v(" "),s("ul",[s("li",[a._v("function() {...}")])]),a._v(" "),s("h2",{attrs:{id:"렉시컬-스코프"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#렉시컬-스코프"}},[a._v("#")]),a._v(" 렉시컬 스코프")]),a._v(" "),s("p",[a._v("함수호출위치가 아닌, 함수 선언 위치에 따라 결정된다.")]),a._v(" "),s("h2",{attrs:{id:"암묵적-전역-implicit-global"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#암묵적-전역-implicit-global"}},[a._v("#")]),a._v(" 암묵적 전역(implicit global)")]),a._v(" "),s("p",[a._v("ES6 아래의, 엄격모드가 아닐때,")]),a._v(" "),s("p",[a._v("변수를 선언 없이 사용했을 경우, "),s("code",[a._v("y = 20")])]),a._v(" "),s("ul",[s("li",[a._v("JS 엔진은 "),s("code",[a._v("window.y = 20")]),a._v(" 으로 해석하여 프로퍼티를 생성")]),a._v(" "),s("li",[a._v("변수가 아니므로 호이스팅이 발생하지 않는다.")])]),a._v(" "),s("h2",{attrs:{id:"즉시실행-함수를-이용한-전역-변수-사용-억제-iife"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#즉시실행-함수를-이용한-전역-변수-사용-억제-iife"}},[a._v("#")]),a._v(" 즉시실행 함수를 이용한 전역 변수 사용 억제 (IIFE)")]),a._v(" "),s("ul",[s("li",[a._v("즉시 실행되고 전역에서 바로 사라진다.")])]),a._v(" "),s("h2",{attrs:{id:"스코프체인"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#스코프체인"}},[a._v("#")]),a._v(" 스코프체인")]),a._v(" "),s("p",[a._v("식별자를 찾는 일련의 과정")]),a._v(" "),s("p",[a._v("변수가 스코프 안에 선언되지 않았다면,\n그 변수를 찾기 위해 부모 스코프로 올라가고,\n거기에도 없다면 또 그 부모 스코프에 올라가서 찾는다.")]),a._v(" "),s("ul",[s("li",[a._v("코드에서 변수에 접근할 땐, 먼저 렉시컬 환경을 검색 범위로 잡는다.")]),a._v(" "),s("li",[a._v("내부 렉시컬 환경에서 원하는 변수를 찾기 못하면 검색 범위를 내부 렉시컬 환경이 참조하는 외부 렉시컬 환경으로 확장한다.")]),a._v(" "),s("li",[a._v("전역 렉시컬 환경으로 확장될 때까지 반복된다.")])]),a._v(" "),s("h3",{attrs:{id:"전역렉시컬에서-변수를-프로퍼티를-찾지-못했을-때"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#전역렉시컬에서-변수를-프로퍼티를-찾지-못했을-때"}},[a._v("#")]),a._v(" 전역렉시컬에서 변수를 프로퍼티를 찾지 못했을 때,")]),a._v(" "),s("ul",[s("li",[a._v("엄격모드 : 에러 발생")]),a._v(" "),s("li",[a._v("비엄격모드 : 새로운 변수가 만들어 진다.\n"),s("ul",[s("li",[a._v("하위호환성을 위해 남아있는 기능")])])])])])}),[],!1,null,null,null);e.default=v.exports}}]);