(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{473:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"solid-principle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solid-principle"}},[t._v("#")]),t._v(" SOLID Principle")]),t._v(" "),a("p",[t._v("알려진 기본 설계 요령")]),t._v(" "),a("h2",{attrs:{id:"isolation-of-change"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isolation-of-change"}},[t._v("#")]),t._v(" Isolation of Change")]),t._v(" "),a("p",[t._v("객체지향 프로그래밍은 어떠한 변화에 대해서도 파급력을 최소화 한다.")]),t._v(" "),a("h2",{attrs:{id:"srp-single-responsibility-단일-책임"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#srp-single-responsibility-단일-책임"}},[t._v("#")]),t._v(" SRP Single Responsibility 단일 책임")]),t._v(" "),a("ul",[a("li",[t._v("코드를 피치못할 사정으로, 수정하는 원인이 하나밖에 없는 것.")]),t._v(" "),a("li",[t._v("격리 수준이 높다면 촘촘한 단위테스트가 필요가 없을 것이다.")]),t._v(" "),a("li",[t._v("잘 지키지 못하면 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Shotgun_surgery",target:"_blank",rel:"noopener noreferrer"}},[t._v("shotgun surgery"),a("OutboundLink")],1),t._v(" 발생")])]),t._v(" "),a("h3",{attrs:{id:"shotgun-surgery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shotgun-surgery"}},[t._v("#")]),t._v(" Shotgun surgery")]),t._v(" "),a("p",[t._v("여러 위치에서 동일한 논리를 복제하면 나중에 동일한 논리를 변경하는 데 드는 비용이 크게 증가 할 수 있습니다.")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyFunc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyFunc2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyFuncN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyFunc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Entering MyFunc \\ n "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyFunc2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Entering MyFunc2 \\ n "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyFuncN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Entering MyFuncN \\ n "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h2",{attrs:{id:"ocp-openclosed-개방폐쇄"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ocp-openclosed-개방폐쇄"}},[t._v("#")]),t._v(" OCP OpenClosed 개방폐쇄")]),t._v(" "),a("ul",[a("li",[t._v("Open\n"),a("ul",[a("li",[t._v("확장에는 열려 있다")]),t._v(" "),a("li",[a("code",[t._v("extends")]),t._v(" "),a("code",[t._v("implements")]),t._v(" 를 할 수 있게 만드는것")])])]),t._v(" "),a("li",[t._v("Closed\n"),a("ul",[a("li",[t._v("설계할 때, 수정해야 되면 기존 클래스를 건드리는 것이 아닌,")]),t._v(" "),a("li",[t._v("또 다른 Implement 클래스나 extends 클래스를 만들어 수정한다.")])])])]),t._v(" "),a("h2",{attrs:{id:"lsp-liskov-substitution-업캐스팅-안전"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lsp-liskov-substitution-업캐스팅-안전"}},[t._v("#")]),t._v(" LSP Liskov Substitution 업캐스팅 안전")]),t._v(" "),a("h3",{attrs:{id:"polymorphism-대체-가능성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#polymorphism-대체-가능성"}},[t._v("#")]),t._v(" Polymorphism 대체 가능성")]),t._v(" "),a("ul",[a("li",[t._v("업캐스팅이 언제나 안전하다.")]),t._v(" "),a("li",[t._v("Super 타입으로 형변환하는 것")])]),t._v(" "),a("h3",{attrs:{id:"성급한-일반화의-모순"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#성급한-일반화의-모순"}},[t._v("#")]),t._v(" 성급한 일반화의 모순")]),t._v(" "),a("p",[t._v("추상층의 정의가 너무 구체적이면 구상층의 구현에서 모순이 발생함")]),t._v(" "),a("ul",[a("li",[t._v("추상층 - 생물(super class)\n"),a("ul",[a("li",[t._v("숨을쉰다, 다리로 이동한다.")])])]),t._v(" "),a("li",[t._v("구상층 - sub class\n"),a("ul",[a("li",[t._v("사람 ok")]),t._v(" "),a("li",[t._v("타조 ok")]),t._v(" "),a("li",[t._v("아메바 no")]),t._v(" "),a("li",[t._v("독수리 no")]),t._v(" "),a("li",[t._v("고래 no")])])]),t._v(" "),a("li",[t._v("아메바 독수리 고래는 생물이지만 upcasting 을 할 수 없다.")]),t._v(" "),a("li",[t._v("다리로 이동한다를 지운다.")]),t._v(" "),a("li",[t._v("추상층을 생물(숨을 쉰다) 다리이동(다리로 이동한다) 로 분리한다.")]),t._v(" "),a("li",[t._v("구상층\n"),a("ul",[a("li",[t._v("사람:생물,다리이동ok!")]),t._v(" "),a("li",[t._v("타조:생물,다리이동ok!")]),t._v(" "),a("li",[t._v("아메바:생물ok!")]),t._v(" "),a("li",[t._v("독수리:생물ok!\n"),a("ul",[a("li",[t._v("고래:생물ok!")])])])])])]),t._v(" "),a("h2",{attrs:{id:"isp-interface-segregation-인터페이스-분리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isp-interface-segregation-인터페이스-분리"}},[t._v("#")]),t._v(" ISP Interface Segregation 인터페이스 분리")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/110199580-5a4e2200-7e9c-11eb-88e6-f8c617b1b03a.png",alt:"image"}})]),t._v(" "),a("p",[t._v("객체가 조금만 수정이되도 모듈 ABC 가 영향을 받는다."),a("br"),t._v("\n객체의 변화가 각각의 모듈에만 영향을 끼치도록 분리하는 것.")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/31977543/110199742-38a16a80-7e9d-11eb-9db6-4fc7afba1a20.png",alt:"image"}})]),t._v(" "),a("h2",{attrs:{id:"dip-dependency-inversion-다운-캐스팅-금지"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dip-dependency-inversion-다운-캐스팅-금지"}},[t._v("#")]),t._v(" DIP Dependency Inversion 다운 캐스팅 금지")]),t._v(" "),a("p",[t._v("의존성은 부모쪽으로만 흘러야 된다.")]),t._v(" "),a("h3",{attrs:{id:"di-dependency-injection-의존성-주입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#di-dependency-injection-의존성-주입"}},[t._v("#")]),t._v(" DI (Dependency Injection) 의존성 주입")]),t._v(" "),a("ul",[a("li",[t._v("(IoC Inversion of Control 제어 역전)")])]),t._v(" "),a("h3",{attrs:{id:"dry-don-t-repeat-yourself-중복-방지"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dry-don-t-repeat-yourself-중복-방지"}},[t._v("#")]),t._v(" DRY Don't Repeat Yourself 중복 방지")]),t._v(" "),a("h3",{attrs:{id:"hollywood-principle-의존성-부패-방지"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hollywood-principle-의존성-부패-방지"}},[t._v("#")]),t._v(" Hollywood Principle 의존성 부패 방지")]),t._v(" "),a("ul",[a("li",[t._v("Wrong : 연락하게 전화 번호 줘, return 전화번호 → 격리위반\n"),a("ul",[a("li",[t._v("전화번호를 바꾸면? 실패한다")])])]),t._v(" "),a("li",[t._v("Right : 전화 해줘, 내가 연락하고 싶을 때 연락할 게")]),t._v(" "),a("li",[t._v("Wrong: 연료봉에 있는 온도를 받아와서 온도에 대한 로직을 처리한다\n"),a("ul",[a("li",[t._v("그 사이에 연료봉의 온도가 변해 있으면?")])])]),t._v(" "),a("li",[t._v("Right: 연료봉에 온도를 바꿔달라고 요청해야 한다.\n"),a("ul",[a("li",[a("em",[t._v("내부에서 상태를 관리한다.")])]),t._v(" "),a("li",[a("em",[t._v("클라이언트는 온도를 낮춘다 라는 캡슐화 된 메서드를 호출할 수 있음")])])])]),t._v(" "),a("li",[t._v("이것을 지키지 않으면 정보은닉과 캡슐화를 위반할 가능성이 높다.")])]),t._v(" "),a("h3",{attrs:{id:"law-of-demeter-최소-지식"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#law-of-demeter-최소-지식"}},[t._v("#")]),t._v(" Law of demeter 최소 지식")]),t._v(" "),a("p",[t._v("최소한의 지식은")]),t._v(" "),a("ol",[a("li",[t._v("method 인자로 넘어온 객체의 타입이다.\n"),a("ul",[a("li",[a("em",[t._v("인자로 받아온 객체의 "),a("code",[t._v("...")]),t._v(" 으로 객체를 캐내는 것은 나쁘다.")])]),t._v(" "),a("li",[t._v("인자로 받아온 객체 타입 이외에 객체 안에 있는 타입까지 다 알게 된다.")]),t._v(" "),a("li",[t._v("의존성이 단순해 지지 않고 복잡해 진다. 이 중에 하나라도 바뀌면 메서드가 깨진다.")])])]),t._v(" "),a("li",[t._v("method 내부에서 생성한 객체의 타입")]),t._v(" "),a("li",[t._v("원래 객체가 갖고있던 필드의 타입")])]),t._v(" "),a("p",[t._v("이것을 깨면 열차전복 train wreck 이 발생한다")])])}),[],!1,null,null,null);s.default=e.exports}}]);