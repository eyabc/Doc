(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{575:function(s,t,a){"use strict";a.r(t);var n=a(44),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"item20-추상-클래스보다는-인터페이스를-우선하라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#item20-추상-클래스보다는-인터페이스를-우선하라"}},[s._v("#")]),s._v(" ITEM20 추상 클래스보다는 인터페이스를 우선하라")]),s._v(" "),a("ul",[a("li",[s._v("다중 구현용 타입 → 인터페이스가 가장 적합")]),s._v(" "),a("li",[s._v("복잡한 인터페이스 → 골격 구현을 함께 제공")]),s._v(" "),a("li",[s._v("골격 구현은 가능한 한 디폴트 메서드로 제공")])]),s._v(" "),a("h2",{attrs:{id:"자바의-다중-구현-매커니즘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#자바의-다중-구현-매커니즘"}},[s._v("#")]),s._v(" 자바의 다중 구현 매커니즘")]),s._v(" "),a("ol",[a("li",[s._v("인터페이스")]),s._v(" "),a("li",[s._v("추상클래스")])]),s._v(" "),a("h3",{attrs:{id:"공통점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#공통점"}},[s._v("#")]),s._v(" 공통점")]),s._v(" "),a("p",[s._v("인스턴스 메서드를 구현 형태로 제공 가능")]),s._v(" "),a("ul",[a("li",[s._v("인터페이스는 자바8부터 default method 제공")])]),s._v(" "),a("h2",{attrs:{id:"차이점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#차이점"}},[s._v("#")]),s._v(" 차이점")]),s._v(" "),a("h3",{attrs:{id:"_1-새로운-타입의-정의"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-새로운-타입의-정의"}},[s._v("#")]),s._v(" 1. 새로운 타입의 정의 ??")]),s._v(" "),a("h4",{attrs:{id:"추상클래스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#추상클래스"}},[s._v("#")]),s._v(" 추상클래스")]),s._v(" "),a("p",[s._v("추상클래스가 정의한 타입을 구현하는 클래스"),a("br"),s._v("\n→ 추상 클래스의 하위 클래스")]),s._v(" "),a("p",[s._v("자바는 단일 상속만 지원"),a("br"),s._v("\n→ 새로운 타입 정의에 제약 존재")]),s._v(" "),a("h4",{attrs:{id:"인터페이스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#인터페이스"}},[s._v("#")]),s._v(" 인터페이스")]),s._v(" "),a("p",[s._v("인터페이스의 규약을 잘 지킨 클래스"),a("br"),s._v("\n→ 어떤 클래스를 상속했든 같은 타입으로 취급")]),s._v(" "),a("h3",{attrs:{id:"_2-기존-클래스에서의-구현"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-기존-클래스에서의-구현"}},[s._v("#")]),s._v(" 2. 기존 클래스에서의 구현")]),s._v(" "),a("h4",{attrs:{id:"인터페이스-→-쉽다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#인터페이스-→-쉽다"}},[s._v("#")]),s._v(" 인터페이스 → 쉽다")]),s._v(" "),a("ol",[a("li",[s._v("인터페이스가 요구하는 메서드 추가")]),s._v(" "),a("li",[s._v("클래스 선언에 implements 구문 추가")])]),s._v(" "),a("h4",{attrs:{id:"추상-클래스-→-어렵다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#추상-클래스-→-어렵다"}},[s._v("#")]),s._v(" 추상 클래스 → 어렵다")]),s._v(" "),a("ul",[a("li",[s._v("계층 구조상 클래스의 공통 조상을 찾는다.")]),s._v(" "),a("li",[s._v("새로 추가된 추상 클래스의 모든 자손이 이를 상속하게 하는 것은 어렵다.")])]),s._v(" "),a("h3",{attrs:{id:"_3-mixin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-mixin"}},[s._v("#")]),s._v(" 3. mixin")]),s._v(" "),a("p",[s._v("클래스가 구현할 수 있는 타입")]),s._v(" "),a("ul",[a("li",[s._v("원래의 주타입 외에 특정 선택정 행위를 제공(혼합; mixed in) 한다고 선언하는 효과 제공")])]),s._v(" "),a("h4",{attrs:{id:"인터페이스-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#인터페이스-2"}},[s._v("#")]),s._v(" 인터페이스")]),s._v(" "),a("p",[s._v("안성맞춤")]),s._v(" "),a("ul",[a("li",[s._v("예) Comparable 은 자신을 구현한 클래스의\n"),a("ul",[a("li",[a("strong",[s._v("인스턴스들끼리는 순서를 정할 수 있다고 선언")]),s._v(" 한 믹스인 인터페이스")])])])]),s._v(" "),a("h4",{attrs:{id:"추상-클래스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#추상-클래스"}},[s._v("#")]),s._v(" 추상 클래스")]),s._v(" "),a("p",[s._v("믹스인을 정의할 수 없다.")]),s._v(" "),a("ul",[a("li",[s._v("기존 클래스에 덧씌울 수 없기 때문")]),s._v(" "),a("li",[s._v("클래스는 두 부모를 섬길 수 없음")]),s._v(" "),a("li",[s._v("클래스 계층 구조 → 믹스인을 삽입하기에 합리적인 위치가 없음")])]),s._v(" "),a("h3",{attrs:{id:"_4-인터페이스로는-계층구조가-없는-타입-프레임워크를-만들-수-있다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-인터페이스로는-계층구조가-없는-타입-프레임워크를-만들-수-있다"}},[s._v("#")]),s._v(" 4. 인터페이스로는 계층구조가 없는 타입 프레임워크를 만들 수 있다.")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Singer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AudioClip")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Song")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" insterface "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Songwriter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Song")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" chartPosition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("타입을 인터페이스로 정의")]),s._v(" "),a("ul",[a("li",[s._v("Singer 와 Songwriter 모두를 구현해도 전혀 문제되지 않는다.")]),s._v(" "),a("li",[s._v("제3의 인터페이스 정의")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingerSongwriter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Singer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Songwriter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AudioClip")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("strum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("actSensitive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"인터페이스-디폴트-메서드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#인터페이스-디폴트-메서드"}},[s._v("#")]),s._v(" 인터페이스 디폴트 메서드")]),s._v(" "),a("p",[s._v("인터페이스의 메서드 중 "),a("strong",[s._v("구현 방법이 명백한 것")]),a("br"),s._v("\n→ 디폴트 메서드로 제공"),a("br"),s._v("\n→ 프로그래머의 일감을 덜어줄 수 있다.")]),s._v(" "),a("ul",[a("li",[s._v("디폴트 메서드를 제공할 땐 → 문서화 필요")])]),s._v(" "),a("h3",{attrs:{id:"제약"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#제약"}},[s._v("#")]),s._v(" 제약")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("equals")]),s._v(", "),a("code",[s._v("hasCode")]),s._v(" 는 디폴트 메서드로 제공할 수 없다.")]),s._v(" "),a("li",[s._v("인터페이스는 인스턴스 필드와, public 이 아닌 정적 멤버를 가질 수 없다. (private 정적 메서드는 예외)")]),s._v(" "),a("li",[s._v("우리가 만들지 않은 인터페이스에는 디폴트 메서드를 추가할 수 없다.")])]),s._v(" "),a("h2",{attrs:{id:"템플릿-메서드-패턴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#템플릿-메서드-패턴"}},[s._v("#")]),s._v(" 템플릿 메서드 패턴")]),s._v(" "),a("p",[s._v("인터페이스 + 추상 골격 구현 (skeletal implementation) 클래스")]),s._v(" "),a("ul",[a("li",[s._v("인터페이스와 추상 클래스의 장점을 모두 취하는 방법")]),s._v(" "),a("li",[s._v("인터페이스 → 타입 정의, 디폴트 메서드 제공")]),s._v(" "),a("li",[s._v("골격 구현 클래스 → 나머지 메서드 구현")])]),s._v(" "),a("h3",{attrs:{id:"네이밍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#네이밍"}},[s._v("#")]),s._v(" 네이밍")]),s._v(" "),a("ul",[a("li",[s._v("인터페이스 Interface")]),s._v(" "),a("li",[s._v("골격 구현 클래스 AbstractInterface\n"),a("ul",[a("li",[s._v("AbstractCollection, AbstractList, AbstractSet, AbstractMap")])])])]),s._v(" "),a("h3",{attrs:{id:"골격-구현을-사용해-완성한-구체-클래스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#골격-구현을-사용해-완성한-구체-클래스"}},[s._v("#")]),s._v(" 골격 구현을 사용해 완성한 구체 클래스")]),s._v(" "),a("p",[s._v("List 구현체를 반환하는 정적 팩터리 메서드, AbstractList 골격 구현으로 활용함.")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intArrayAsList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Objects")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("requireNonNull")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 다이아몬드 연산자 <>, 자바9 부터 가능")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 오토박싱")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" oldVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 오토언박싱")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" oldVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 오토박싱")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("   \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h3",{attrs:{id:"골격-구현-클래스의-의의"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#골격-구현-클래스의-의의"}},[s._v("#")]),s._v(" 골격 구현 클래스의 의의")]),s._v(" "),a("ul",[a("li",[s._v("추상 클래스처럼 구현을 도와줌")]),s._v(" "),a("li",[s._v("추상 클래스로 타입을 정의할 때의 제약에서 벗어남")])]),s._v(" "),a("h3",{attrs:{id:"시뮬레이트한-다중상속-simulated-multiple-inheritance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#시뮬레이트한-다중상속-simulated-multiple-inheritance"}},[s._v("#")]),s._v(" 시뮬레이트한 다중상속 simulated multiple inheritance")]),s._v(" "),a("ol",[a("li",[s._v("인터페이스를 구현한 클래스에서 해당 골격 구현을 확장한 private 내부 클래스를 정의함")]),s._v(" "),a("li",[s._v("각 메서드 호출을 내부 클래스의 인스턴스에 전달")])]),s._v(" "),a("p",[s._v("래퍼 클래스와 비슷한 방식")]),s._v(" "),a("h3",{attrs:{id:"골격-구현의-작성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#골격-구현의-작성"}},[s._v("#")]),s._v(" 골격 구현의 작성")]),s._v(" "),a("ol",[a("li",[s._v("인터페이스의 기반 메서드를 선정함")]),s._v(" "),a("li",[s._v("기반 메서드들을 사용해 직접 구현할 수 있는 메서드 → 디폴트 메서드로 제공\n"),a("ul",[a("li",[s._v("기반 메서드를 모두 디폴트 메서드로 구현하였다면 골격 구현 클래스의 작성이 필요 없다.")])])]),s._v(" "),a("li",[s._v("나머지 기반 메서드 → 골격 구현 클래스에 작성\n"),a("ul",[a("li",[s._v("골격 구현 클래스에는 필요하면 public 이 아닌 필드와 메서드를 추가할 수 있다.")])])])]),s._v(" "),a("h3",{attrs:{id:"골격-구현-클래스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#골격-구현-클래스"}},[s._v("#")]),s._v(" 골격 구현 클래스")]),s._v(" "),a("p",[s._v("Map.Entry 인터페이스")]),s._v(" "),a("ul",[a("li",[s._v("디폴트 메서드의 기반 메서드\n"),a("ul",[a("li",[s._v("getKey, getValue, [setValue]")])])]),s._v(" "),a("li",[s._v("골격 구현 클래스의 기반 메서드\n"),a("ul",[a("li",[s._v("Object 메서드들")]),s._v(" "),a("li",[s._v("equals, hashCode, toString")])])])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractMapEntry")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 변경 가능한 엔트리는 이 메서드를 반드시 재정의 해야함")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UnsupportedOperationException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Map.Entry.equals 의 일반 규약을 구현함.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("equals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("   \n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Map.Entry.hashCode 의 일반 규약을 구현함")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"="')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h3",{attrs:{id:"골격-구현-클래스의-문서화"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#골격-구현-클래스의-문서화"}},[s._v("#")]),s._v(" 골격 구현 클래스의 문서화")]),s._v(" "),a("p",[s._v("골격 구현은 기본적으로 "),a("strong",[s._v("상속")]),s._v("해서 사용하는 것을 가정함")]),s._v(" "),a("ul",[a("li",[s._v("[19] 설계 및 문서화 지침을 모두 따라야 함.")])])])}),[],!1,null,null,null);t.default=e.exports}}]);