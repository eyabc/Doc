(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{557:function(a,t,s){"use strict";s.r(t);var n=s(44),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"item4-인스턴스화를-막으려거든-private-생성자를-사용하라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item4-인스턴스화를-막으려거든-private-생성자를-사용하라"}},[a._v("#")]),a._v(" ITEM4 인스턴스화를 막으려거든 private 생성자를 사용하라")]),a._v(" "),s("p",[a._v("정적 메서드와 정적 필드만을 담은 클래스")]),a._v(" "),s("ol",[s("li",[a._v("객체 지향적으로 사고하지 않는 이들이 종종 남용하는 방식")]),a._v(" "),s("li",[a._v("나름의 쓰임새")])]),a._v(" "),s("h2",{attrs:{id:"정적-메서드와-정적-필드만을-담은-클래스-나름의-쓰임새"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정적-메서드와-정적-필드만을-담은-클래스-나름의-쓰임새"}},[a._v("#")]),a._v(" 정적 메서드와 정적 필드만을 담은 클래스, 나름의 쓰임새")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("java.lang.Math")]),a._v(" "),s("code",[a._v("java.util.Arrays")]),a._v(" "),s("ul",[s("li",[a._v("기본 타입 값이나 배열 관련 메서드들을 모아놓은 클래스")])])]),a._v(" "),s("li",[s("code",[a._v("java.util.Collections")]),a._v(" "),s("ul",[s("li",[a._v("특정 인터페이스를 구현하는 객체를 생성해주는 정적 메서드(팩터리)")])])]),a._v(" "),s("li",[a._v("final 클래스와 관련한 메서드들을 모아놓을 때\n"),s("ul",[s("li",[a._v("final 클래스를 상속해서 하위 클래스에 메서드를 넣는 건 불가능 하기 때문.")])])])]),a._v(" "),s("h2",{attrs:{id:"정적-멤버만-담은-유틸리티-클래스의-인스턴스화-방지"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정적-멤버만-담은-유틸리티-클래스의-인스턴스화-방지"}},[a._v("#")]),a._v(" 정적 멤버만 담은 유틸리티 클래스의 인스턴스화 방지")]),a._v(" "),s("p",[a._v("private 생성자를 추가하여 클래스의 인스턴화를 막아야 한다.")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UtilityClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 클래스 안에서 실수로라도 생성자를 호출하지 않도록 함.")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AssertionError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("ol",[s("li",[a._v("생성자를 명시하지 않으면 컴파일러가 자동으로 기본 생성자를 생성함.")]),a._v(" "),s("li",[a._v("추상클래스로 만드는 것은 인스턴스화를 막을 수 없음\n"),s("ul",[s("li",[a._v("하위 클래스를 만들어 인스턴스화 할 수 있음")])])])]),a._v(" "),s("p",[a._v("상속을 불가능하게 하는 효과")]),a._v(" "),s("ul",[s("li",[a._v("모든 생성자는 명시적이든 묵시적이든 상위 클래스의 생성자를 호출한다.")]),a._v(" "),s("li",[a._v("private 으로 선언되어, 하위 클래스가 상위 클래스의 생성자에 접근할 수 없다.")])])])}),[],!1,null,null,null);t.default=e.exports}}]);