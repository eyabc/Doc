(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{552:function(a,t,e){"use strict";e.r(t);var s=e(44),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"item-1-생성자-대신-정적-팩터리-메서드를-고려하라"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item-1-생성자-대신-정적-팩터리-메서드를-고려하라"}},[a._v("#")]),a._v(" ITEM 1 생성자 대신 정적 팩터리 메서드를 고려하라")]),a._v(" "),e("p",[a._v("클래스는 클라이언트에 public 생성자 대신 "),e("strong",[a._v("정적 팩터리 메서드")]),a._v(" 를 제공할 수 있다.")]),a._v(" "),e("ul",[e("li",[a._v("각각의 쓰임새가 있으나, 상대적인 장단점을 이해하고 사용하는 것이 좋다.")]),a._v(" "),e("li",[a._v("정적 팩터리가 유리한 경우가 더 많으므로 무작정 public 생성자를 제공하던 습관이 있으면 고치는 것을 권장")])]),a._v(" "),e("blockquote",[e("p",[a._v("처음 책을 보면서 모르거나 얼핏으로 알기만 하는 개념들이 수두룩 했습니다. ITEM 레퍼런스도 나와 있지만,\n현재 개념에 집중하기 위해 찾아보지 않았습니다.\n순차적으로 공부를 하면서 개념이 등장할 때, 다시 보충하고 복습하는 식으로 책을 읽겠습니다.")])]),a._v(" "),e("p",[a._v("예시) boolean 기본 타입의 박싱 클래스인 Boolean 에서 발췌하였다."),e("br"),a._v("\nboolean 값을 받아 Boolean 객체 참조로 변환해주는 메서드.")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Boolean")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("valueOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Boolean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("TRUE "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Boolean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("FALSE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Deprecated")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    since "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"9"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Boolean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("Boolean 클래스는 정적 팩터리 메서드인 valueOf()를 가지며,\n덕분에 새로운 객체를 전혀 생성하지 않고 인스턴스를 재활용할 수 있다."),e("br"),a._v("\n자바 9 이후로는 위 코드와 같이 Boolean 클래스의 생성자가 deprecated 되었다."),e("br"),a._v("\n불필요한 객체 생성을 하지 않는 쪽으로 발전하는 것이다.\n"),e("a",{attrs:{href:"https://gist.github.com/kth496/1d6906d43775e76bd0956be228f8f83d",target:"_blank",rel:"noopener noreferrer"}},[a._v("@kth496"),e("OutboundLink")],1)]),a._v(" "),e("h2",{attrs:{id:"장점"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#장점"}},[a._v("#")]),a._v(" 장점")]),a._v(" "),e("h3",{attrs:{id:"_1-이름을-가질-수-있다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-이름을-가질-수-있다"}},[a._v("#")]),a._v(" 1. 이름을 가질 수 있다.")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("반환될 객체의 특성을 더 잘 설명할 수 있다.")]),a._v(" "),e("ul",[e("li",[a._v("예시) 값이 소수인 BigInteger 를 반환한다\n"),e("ul",[e("li",[e("code",[a._v("BigInteger(int, int, Random)")])]),a._v(" "),e("li",[e("code",[a._v("BigInteger.probablePrime")])])])])])]),a._v(" "),e("li",[e("p",[a._v("시그니처의 제한이 없이 생성자의 의미를 드러낼 수 있다.")])])]),a._v(" "),e("h3",{attrs:{id:"_2-호출-될-때마다-인스턴스를-새로-생성하지-않아도-된다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-호출-될-때마다-인스턴스를-새로-생성하지-않아도-된다"}},[a._v("#")]),a._v(" 2. 호출 될 때마다 인스턴스를 새로 생성하지 않아도 된다.")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("불변 클래스[17]에서 불필요한 객체 생성을 피할 수 있다.")]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("인스턴스를 미리 만들어 놓는방법")]),a._v(" 가능")]),a._v(" "),e("li",[a._v("새로 생성한 인스턴스를 "),e("strong",[a._v("캐싱")]),a._v("하여 재활용 가능")])])]),a._v(" "),e("li",[e("p",[a._v("생성 비용이 큰 객체를 자주 요청되는 상황에서 성능 향상을 기대")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("Boolean.valueOf(boolean)")]),a._v(" 는 객체를 생성하지 않음.\n"),e("ul",[e("li",[a._v("valueOf 는 Boolean 객체를 매번 생성하여 true, 나 false 를 반환하지 않는다.")])])]),a._v(" "),e("li",[a._v("불변 클래스는 getter setter 를 쓰지 않고, 내용의 변경이 필요할 경우, 새로운 객체를 만들어서 반환하는 특징이 있다.")]),a._v(" "),e("li",[e("s",[a._v("Flyweight 패턴과 유사.")])])])]),a._v(" "),e("li",[e("p",[a._v("인스턴스 통제 Instance-controlled")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("캐싱")]),a._v(" 반복되는 요청에는 같은 객체를 반환")]),a._v(" "),e("li",[e("code",[a._v("싱글턴")]),a._v(" SingleTon[3]")]),a._v(" "),e("li",[e("code",[a._v("인스턴스화 불가")]),a._v(" NonInstantiable[4] 클래스")]),a._v(" "),e("li",[a._v("불변 값 클래스 (ITEM 17) 에서 동치인 인스턴스가 단 하나뿐임을 보장 가능\n"),e("ul",[e("li",[e("code",[a._v("a == b")]),a._v(" 일 때만, "),e("code",[a._v("a.equals(b)")]),a._v(" 가 성립")])])])])]),a._v(" "),e("li",[e("p",[e("s",[a._v("인스턴스 통제는 Flyweight 패턴의 근간이 된다.")])])]),a._v(" "),e("li",[e("p",[e("s",[a._v("열거 타입 (ITEM 34) 은 인스턴스가 하나만 만들어짐을 보장한다.")])])])]),a._v(" "),e("h3",{attrs:{id:"_3-반환-타입의-하위-타입-객체를-반환-가능"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-반환-타입의-하위-타입-객체를-반환-가능"}},[a._v("#")]),a._v(" 3. 반환 타입의 하위 타입 객체를 반환 가능")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("반환할 객체의 클래스를 자유롭게 선택할 수 있는 유연성")])]),a._v(" "),e("li",[e("p",[a._v("자바 컬렉션 프레임 워크")]),a._v(" "),e("ul",[e("li",[a._v("구현체 대부분을 단 하나의 인스턴스화 불가 클래스인 java.util.Collections 에서 정적 팩터리 메서드를 통해 얻도록함.")]),a._v(" "),e("li",[a._v("[20] 정적 팩터리 메서드의 반환 타입으로 사용하는 인터페이스 기반 프레임워크를 만드는 핵심기술.")])])])]),a._v(" "),e("h3",{attrs:{id:"_4-입력-매개-변수에-따라-매번-다른-클래스의-객체를-반환할-수-있다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-입력-매개-변수에-따라-매번-다른-클래스의-객체를-반환할-수-있다"}},[a._v("#")]),a._v(" 4. 입력 매개 변수에 따라 매번 다른 클래스의 객체를 반환할 수 있다.")]),a._v(" "),e("p",[a._v("반환 타입의 하위 타입이기만 하면 모든 클래스의 객체를 반환 할 수 있는 특성.")]),a._v(" "),e("p",[a._v("EnumSet")]),a._v(" "),e("ul",[e("li",[a._v("정적 팩터리만 제공")]),a._v(" "),e("li",[a._v("OpenJDK 는 원소의 수에 따라 두가지 하위 클래스 중 하나의 인스턴스를 반환할 수 있음.")]),a._v(" "),e("li",[a._v("클라이언트는 하위 클래스의 존재를 신경쓰지 않아도 됨")])]),a._v(" "),e("h3",{attrs:{id:"_5-정적-팩터리-메서드-작성-시점-반환할-객체의-클래스가-존재하지-않아도-된다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-정적-팩터리-메서드-작성-시점-반환할-객체의-클래스가-존재하지-않아도-된다"}},[a._v("#")]),a._v(" 5. 정적 팩터리 메서드 작성 시점, 반환할 객체의 클래스가 존재하지 않아도 된다.")]),a._v(" "),e("blockquote",[e("p",[a._v("반환할 객체의 클래스가 존재하지 않아도 된다? 처음 들은 시점에는 참 이상한 소리다...")])]),a._v(" "),e("h4",{attrs:{id:"service-provider-framework-를-만드는-근간이-된다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service-provider-framework-를-만드는-근간이-된다"}},[a._v("#")]),a._v(" Service Provider Framework 를 만드는 근간이 된다.")]),a._v(" "),e("ul",[e("li",[a._v("Provider\n"),e("ul",[e("li",[a._v("서비스의 구현체")])])]),a._v(" "),e("li",[a._v("Framework\n"),e("ul",[e("li",[a._v("구현체들을 클라이언트에게 제공하는 것을 통제.")]),a._v(" "),e("li",[a._v("클라이언트를 구현체로부터 분리.")])])]),a._v(" "),e("li",[a._v("Service Provider Framework 의 핵심 컴포넌트 3 요소\n"),e("ol",[e("li",[a._v("Service Interface\n"),e("ul",[e("li",[a._v("구현체 동작 정의.")])])]),a._v(" "),e("li",[a._v("Provider Registration API\n"),e("ul",[e("li",[a._v("Provider 가 구현체를 등록할 때 사용하는 API")])])]),a._v(" "),e("li",[a._v("Service Access API\n"),e("ul",[e("li",[a._v("클라이언트가 서비스의 인스턴스를 얻을 때 사용하는 API")]),a._v(" "),e("li",[a._v("정적 팩터리")])])])])])]),a._v(" "),e("h4",{attrs:{id:"예-jdbc-java-database-connectivity"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#예-jdbc-java-database-connectivity"}},[a._v("#")]),a._v(" 예) JDBC (Java Database Connectivity)")]),a._v(" "),e("ul",[e("li",[a._v("Service Interface\n"),e("ul",[e("li",[a._v("Connection")])])]),a._v(" "),e("li",[a._v("Provider Registration API\n"),e("ul",[e("li",[a._v("DriverManager.registerDriver")])])]),a._v(" "),e("li",[a._v("Service Access API\n"),e("ul",[e("li",[a._v("DriverManager.getConnection")])])])]),a._v(" "),e("h2",{attrs:{id:"단점"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#단점"}},[a._v("#")]),a._v(" 단점")]),a._v(" "),e("h3",{attrs:{id:"_1-정적-팩터리-메서드만-제공할-경우-하위클래스를-만들-수-없다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-정적-팩터리-메서드만-제공할-경우-하위클래스를-만들-수-없다"}},[a._v("#")]),a._v(" 1. 정적 팩터리 메서드만 제공할 경우, 하위클래스를 만들 수 없다.")]),a._v(" "),e("ul",[e("li",[a._v("상속을 하려면 public 이나 protected 생성자가 필요하기 때문")]),a._v(" "),e("li",[a._v("역단점\n"),e("ul",[e("li",[a._v("상속 보다는 컴포지션[18]사용과, 불변 타입[17] 을 지킬 수 있다는 장점으로 작용한다.")])])])]),a._v(" "),e("h3",{attrs:{id:"_2-정적-팩터리-메서드는-프로그래머가-찾기-어렵다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-정적-팩터리-메서드는-프로그래머가-찾기-어렵다"}},[a._v("#")]),a._v(" 2. 정적 팩터리 메서드는 프로그래머가 찾기 어렵다.")]),a._v(" "),e("ul",[e("li",[a._v("생성자는 API 설명에 명확히 드러나있다.")]),a._v(" "),e("li",[a._v("사용자가 정적 팩터리 메서드에 대해 공부해야 한다.")]),a._v(" "),e("li",[a._v("보완\n"),e("ul",[e("li",[a._v("javadoc 정리")]),a._v(" "),e("li",[a._v("메서드 이름을 잘 알려진 규약으로 짓기")])])])]),a._v(" "),e("h2",{attrs:{id:"잘-알려진-규약의-명명-방식"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#잘-알려진-규약의-명명-방식"}},[a._v("#")]),a._v(" 잘 알려진 규약의 명명 방식")]),a._v(" "),e("h3",{attrs:{id:"from"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[a._v("#")]),a._v(" from")]),a._v(" "),e("p",[a._v("형 변환 메서드")]),a._v(" "),e("ul",[e("li",[a._v("매개 변수 1개")]),a._v(" "),e("li",[a._v("해당 타입의 인스턴스 반환")])]),a._v(" "),e("p",[e("code",[a._v("Date d = Date.from(instance);")])]),a._v(" "),e("h3",{attrs:{id:"of"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#of"}},[a._v("#")]),a._v(" of")]),a._v(" "),e("p",[a._v("집계 메서드")]),a._v(" "),e("ul",[e("li",[a._v("여러 매개변수")]),a._v(" "),e("li",[a._v("적합한 타입의 인스턴스 반환")])]),a._v(" "),e("p",[e("code",[a._v("Set<Rank> faceCards = EnumSet.of(JACK, QUEEN, KING);")])]),a._v(" "),e("h3",{attrs:{id:"valueof"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#valueof"}},[a._v("#")]),a._v(" valueOf")]),a._v(" "),e("p",[a._v("from/of 의 더 자세한 버전 ??")]),a._v(" "),e("p",[e("code",[a._v("BigInteger prime = BigInteger.valueOf(Integer.MAX_VALUE);")])]),a._v(" "),e("h3",{attrs:{id:"instance-getinstance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instance-getinstance"}},[a._v("#")]),a._v(" instance / getInstance")]),a._v(" "),e("ul",[e("li",[a._v("매개변수를 받는 다면, 매개변수로 명시한 인스턴스를 반환한다. ??")]),a._v(" "),e("li",[a._v("매개변수와 같은 인스턴스임을 보장하지 않음.")])]),a._v(" "),e("p",[e("code",[a._v("StackWalker luke = StackWalker.getInstance(options);")])]),a._v(" "),e("h3",{attrs:{id:"create-newinstance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-newinstance"}},[a._v("#")]),a._v(" create / newInstance")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("instance / getInstance")]),a._v(" 와 같지만, 매번 새로운 인스턴스를 생성해 반환함을 보장")])]),a._v(" "),e("p",[e("code",[a._v("Object newArray = Array.newInstance(classObject, arrayLen);")])]),a._v(" "),e("h3",{attrs:{id:"gettype"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gettype"}},[a._v("#")]),a._v(" getType")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("getInstance")]),a._v(" 와 같으나, 생성할 클래스가 아닌 다른 클래스에 팩터리 메서드를 정의할 때 사용")]),a._v(" "),e("li",[a._v("Type 은 팩터리 메서드가 반환할 객체 타입")])]),a._v(" "),e("p",[e("code",[a._v("FileStore fs = Files.getFileStore(path);")])]),a._v(" "),e("h3",{attrs:{id:"newtype"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newtype"}},[a._v("#")]),a._v(" newType")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("newInstance")]),a._v(" 와 같으나, 생성할 클래스가 아닌 다른 클래스에 팩터리 메서드를 정의할 때 사용")]),a._v(" "),e("li",[a._v("Type 은 팩터리 메서드가 반환할 객체 타입")])]),a._v(" "),e("p",[e("code",[a._v("BufferedReader br = Files.newBufferedReader(path);")])]),a._v(" "),e("h3",{attrs:{id:"type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[a._v("#")]),a._v(" type")]),a._v(" "),e("p",[e("code",[a._v("getType/newType")]),a._v(" 의 간결한 버전")]),a._v(" "),e("p",[e("code",[a._v("List<Complaint> litany = Collections.list(legacyLitany);")])])])}),[],!1,null,null,null);t.default=v.exports}}]);