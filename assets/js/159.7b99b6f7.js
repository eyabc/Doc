(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{565:function(a,s,t){"use strict";t.r(s);var n=t(44),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"item14-comparable-을-구현할지-고려하라"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#item14-comparable-을-구현할지-고려하라"}},[a._v("#")]),a._v(" ITEM14 Comparable 을 구현할지 고려하라")]),a._v(" "),t("p",[t("strong",[a._v("순서를 고려해야 하는 값 클래스를 작성")]),a._v(" → 꼭 Comparable 인터페이스를 구현")]),a._v(" "),t("ul",[t("li",[a._v("그 인스턴스들을 쉽게 정렬하고, 검색하고, 비교 기능을 제공하는 컬렉션과 어우러지도록 해야한다.")])]),a._v(" "),t("h2",{attrs:{id:"compareto"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compareto"}},[a._v("#")]),a._v(" compareTo")]),a._v(" "),t("p",[a._v("Comparable 인터페이스의 유일한 메서드")]),a._v(" "),t("ul",[t("li",[a._v("Object 메서드가 아님")]),a._v(" "),t("li",[a._v("Object equals 와 유사함")])]),a._v(" "),t("h2",{attrs:{id:"compareto-특징"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compareto-특징"}},[a._v("#")]),a._v(" compareTo 특징")]),a._v(" "),t("ul",[t("li",[a._v("compareTo 는 단순 동치성 비교 + "),t("strong",[a._v("순서 비교")])]),a._v(" "),t("li",[a._v("Comparable 을 구현한 클래스\n"),t("ul",[t("li",[a._v("객체는 자연 순서 존재")]),a._v(" "),t("li",[a._v("객체들의 배열은 "),t("code",[a._v("Arrays.sort(a);")]),a._v(" 로 정렬 가능")])])]),a._v(" "),t("li",[a._v("Comparable 을 구현하면 이 인터페이스를 활용하는 수 많은 제네릭 알고리즘과 컬렉션의 효과를 사용할 수 있음\n"),t("ul",[t("li",[a._v("자바 플랫폼 라이브러리의 모든 값 클래스와 열거타입[34]이 Comparable 을 구현함.")]),a._v(" "),t("li",[a._v("알파벳, 숫자, 연대 같이 순서가 명확한 값 클래스를 작성한다면 반드시 Comparable 인터페이스를 구현하자")]),a._v(" "),t("li",[a._v("검색, 극단값 계산, 자동 정렬되는 컬렉션 관리 가능")]),a._v(" "),t("li",[a._v("아래 코드는 String 이 Comparable 을 구현 → 명령줄 인수들을 알파벳 순으로 출력함")])]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("WordList")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Set")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TreeSet")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Collections")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("addAll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("   \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])])])]),a._v(" "),t("h2",{attrs:{id:"compareto-일반-규약"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compareto-일반-규약"}},[a._v("#")]),a._v(" compareTo 일반 규약")]),a._v(" "),t("p",[a._v("equals 규약과 유사함")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparable")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compareTo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("이 객체와 주어진 객체의 순서를 비교한다.")]),a._v(" "),t("ul",[t("li",[a._v("이 객체가 주어진 객체보다\n"),t("ul",[t("li",[a._v("작으면 음의정수 반환")]),a._v(" "),t("li",[a._v("같으면 0 반환")]),a._v(" "),t("li",[a._v("크면 양의정수 반환")])])]),a._v(" "),t("li",[a._v("이 객체와 비교할 수 없는 타입의 객체가 주어지면\n"),t("ul",[t("li",[a._v("ClassCastException 을 던짐")])])])]),a._v(" "),t("blockquote",[t("p",[a._v("sng(표현식) 표기"),t("br"),a._v("\n부호 함수(signum function)"),t("br"),a._v("\n표현식의 값이 음수, 0, 양수 일 때 -1, 0, 1 을 반환하도록 정의됨")])]),a._v(" "),t("p",[a._v("Comparable 을 구현한 클래스는")]),a._v(" "),t("ul",[t("li",[a._v("모든 x, y 에 대해\n"),t("ul",[t("li",[t("code",[a._v("sng(x.compareTo(y)) == - sgn(y.compareTo(x))")]),a._v(" 이다")]),a._v(" "),t("li",[a._v("(따라서 "),t("code",[a._v("x.compareTo(y)")]),a._v(" 는 "),t("code",[a._v("y.compareTo(x)")]),a._v(" 가 예외를 던질 때에 한해 예외를 던져야 한다.)")])])]),a._v(" "),t("li",[a._v("추이성을 보장해야 한다.\n"),t("ul",[t("li",[t("code",[a._v("(x.compareTo(y) > 0 && y.compareTo(z) > 0)")]),a._v(" 이면 "),t("code",[a._v("x.compareTo(z) > 0")]),a._v(" 이다")])])]),a._v(" "),t("li",[a._v("모든 z 에 대해\n"),t("ul",[t("li",[t("code",[a._v("x.compareTo(y) == 0")]),a._v(" 이면 "),t("code",[a._v("sgn(x.compareTo(z)) == sgn(y.compareTo(z))")])])])]),a._v(" "),t("li",[a._v("필수는 아니지만 꼭 지키는게 좋은 항목\n"),t("ul",[t("li",[t("code",[a._v("(x.compareTo(y) == 0) == (x.equals(y))")]),a._v(" 여야 한다.")]),a._v(" "),t("li",[a._v("compareTo 로 수행한 동치성 테스트의 결과가 equals 와 같아야 한다.")]),a._v(" "),t("li",[a._v("권고를 지키지 않는 클래스\n"),t("ul",[t("li",[a._v('"주의: 이 클래스의 순서는 equals 메서드와 일관되지 않다." 명시해야 함')])])])])])]),a._v(" "),t("h2",{attrs:{id:"equals-와-compareto"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#equals-와-compareto"}},[a._v("#")]),a._v(" equals 와 compareTo")]),a._v(" "),t("h3",{attrs:{id:"equals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#equals"}},[a._v("#")]),a._v(" equals")]),a._v(" "),t("ul",[t("li",[a._v("모든 객체에 대해 전역 동치관계를 부여함")]),a._v(" "),t("li",[a._v("타입 캐스팅 필요")])]),a._v(" "),t("h3",{attrs:{id:"compareto-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compareto-2"}},[a._v("#")]),a._v(" compareTo")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("타입이 다른 객체를 신경쓰지 않아도 됨")])]),a._v(" "),t("li",[t("p",[a._v("타입이 다른 객체가 주어지면 ClassCastException 을 던지면 됨.")])]),a._v(" "),t("li",[t("p",[a._v("규약에서는 다른 타입 비교도 허용하지만,"),t("br"),a._v("\n보통 비교할 객체들이 구현한 공통 인터페이스(Collections, Set, Map)를 매개로 이뤄진다.")])]),a._v(" "),t("li",[t("p",[a._v("hashCode 규약을 지키지 못하면 해시를 사용하는 클래스와 어울리지 못하듯,"),t("br"),a._v("\ncompareTo 규약을 지키지 못하면 비교를 활용하는 클래스와 어울리지 못한다.")]),a._v(" "),t("ul",[t("li",[a._v("비교를 활용하는 클래스\n"),t("ul",[t("li",[a._v("정렬된 컬렉션 TreeSet, TreeMap")]),a._v(" "),t("li",[a._v("검색과 정렬알고리즘을 활용하는 Collections, Arrays")])])]),a._v(" "),t("li",[a._v("해당 컬렉션이 구현한 인터페이스(Collections, Set, Map..) 에 정의된 동작과 어울리지 못함.\n"),t("ul",[t("li",[a._v("이 인터페이스들은 equals 메서드의 규약을 따른다고 되어 있지만, 동치성을 비교할 때 compareTo 를 사용함")])])])])]),a._v(" "),t("li",[t("p",[a._v("compareTo 와 equals 가 일관되지 않는 BigDecimal 클래스")]),a._v(" "),t("ul",[t("li",[a._v("HashSet 인스턴스를 생성한 다음\n"),t("ul",[t("li",[t("code",[a._v('new BigDecimal("1.0")')]),a._v(", "),t("code",[a._v('new BigDecimal("1.00")')]),a._v(" 을 추가한다.")]),a._v(" "),t("li",[a._v("equals 메서드로 비교하면 서로 다르기 때문에 hashSet 은 원소를 2개 갖는다.")])])]),a._v(" "),t("li",[a._v("TreeSet 인스턴스를 사용하면 원소 1개 만 갖는다.\n"),t("ul",[t("li",[a._v("compareTo 메서드로 비교하면 두 bigDecimal 인스턴스가 같다.")])])])])])]),a._v(" "),t("h2",{attrs:{id:"comparable-을-구현한-클래스를-확장해-값을-추가하는-방법"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#comparable-을-구현한-클래스를-확장해-값을-추가하는-방법"}},[a._v("#")]),a._v(" Comparable 을 구현한 클래스를 확장해 값을 추가하는 방법")]),a._v(" "),t("ul",[t("li",[a._v("확장하여 값을 추가할 때 compareTo 규약을 지킬 방법이 없다.")]),a._v(" "),t("li",[a._v("컴포지션을 사용하자")])]),a._v(" "),t("h2",{attrs:{id:"compareto-메서드-작성-요령"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compareto-메서드-작성-요령"}},[a._v("#")]),a._v(" compareTo 메서드 작성 요령")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://eyabc.github.io/Doc/dev/java/effective-java/ch3/ITEM10.html#equals-%EB%A9%94%EC%84%9C%EB%93%9C-%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95",target:"_blank",rel:"noopener noreferrer"}},[a._v("equals 와 비슷함"),t("OutboundLink")],1)]),a._v(" "),t("ol",[t("li",[a._v("== 연산자를 사용해 입력이 자기 자신의 참조인지 확인한다.")]),a._v(" "),t("li",[a._v("instanceof 연산자로 입력이 올바른 타입인지 확인한다.")]),a._v(" "),t("li",[a._v("입력을 올바른 타입으로 형변환한다.")]),a._v(" "),t("li",[a._v("입력 객체와 자기 자신의 대응되는 핵심 필드들이 모두 일치하는지 하나씩 검사한다.")])]),a._v(" "),t("h3",{attrs:{id:"equals와-차이점"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#equals와-차이점"}},[a._v("#")]),a._v(" equals와 차이점")]),a._v(" "),t("ul",[t("li",[a._v("Comparable 은 타입을 인수로 받는 제네릭 인터페이스\n"),t("ul",[t("li",[a._v("compareTo 메서드의 인수 타입은 컴파일 타임에 정해짐")]),a._v(" "),t("li",[a._v("입력 인수타입을 확인하거나 형변환 할 필요가 없다.")])])]),a._v(" "),t("li",[a._v("null 을 인수로 넣어 호출하면 NullPointerException 을 던져야 한다.")])]),a._v(" "),t("h3",{attrs:{id:"객체-compareto-의-비교"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#객체-compareto-의-비교"}},[a._v("#")]),a._v(" 객체 compareTo 의 비교")]),a._v(" "),t("p",[a._v("compareTo 는 각 필드의 동치를 비교하는 것이 아니라, 순서를 비교함")]),a._v(" "),t("ul",[t("li",[a._v("객체참조 필드를 비교하려면 compareTo 메서드를 재귀적으로 호출함")]),a._v(" "),t("li",[a._v("Comparator 비교자의 사용\n"),t("ul",[t("li",[a._v("Comparable 을 구현하지 않은 필드")]),a._v(" "),t("li",[a._v("표준이 아닌 순서로 비교해야 할 때")]),a._v(" "),t("li",[a._v("비교자는 직접 만들거나 자바가 제공하는 것 중에 고르면 된다.")]),a._v(" "),t("li",[a._v("다음 코드는 자바가 제공하는 비교자를 사용하였음")])]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CaseInsensitiveString")]),a._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparable")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CaseInsensitiveString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compareTo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CaseInsensitiveString")]),a._v(" cis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("CASE_INSENSITIVE_ORDER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" cis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("ul",[t("li",[t("code",[a._v("implements Comparable<CaseInsensitiveString>")]),a._v(" "),t("ul",[t("li",[a._v("CaseInsensitiveString 의 참조는, CaseInsensitiveString 참조와만 비교할 수 있다")])])])])])]),a._v(" "),t("h3",{attrs:{id:"기본-타입의-비교"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#기본-타입의-비교"}},[a._v("#")]),a._v(" 기본 타입의 비교")]),a._v(" "),t("p",[a._v("자바7 이후의, 박싱된 기본 타입 클래스들에 추가된 정적 메서드 compare 사용")]),a._v(" "),t("h3",{attrs:{id:"비교-순서"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#비교-순서"}},[a._v("#")]),a._v(" 비교 순서")]),a._v(" "),t("p",[a._v("클래스에 핵심필드가 여러개라면 비교 순서가 중요하다")]),a._v(" "),t("h4",{attrs:{id:"_1-가장-핵심적인-필드부터-비교"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-가장-핵심적인-필드부터-비교"}},[a._v("#")]),a._v(" 1. 가장 핵심적인 필드부터 비교")]),a._v(" "),t("ul",[t("li",[a._v("비교 결과가 0 이 아니라면, (순서가 결정되면) 결과를 바로 반환해야 한다.")]),a._v(" "),t("li",[a._v("핵심 필드가 똑같다면(0), 똑같지 않은 필드를 찾을 때 까지 그 다음으로 중요한 필드를 비교한다.")])]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compareTo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PhoneNumber")]),a._v(" pn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Short")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("areaCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" pn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("areaCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("result "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        result "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Short")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("prefix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" pn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("prefix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("result "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            result "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Short")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("lineNum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" pn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lineNum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br")])]),t("h3",{attrs:{id:"비교자-생성-메서드를-활용한-비교자"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#비교자-생성-메서드를-활용한-비교자"}},[a._v("#")]),a._v(" 비교자 생성 메서드를 활용한 비교자")]),a._v(" "),t("p",[a._v("자바8 에서, Comparator 인터페이스가 비교자 생성 메서드 comparator constructor method\n와 메서드 연쇄방식으로 비교자를 생성할 수 있게 되었다.")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparator")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PhoneNumber")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" COMPARATOR "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("comparingInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PhoneNumber")]),a._v(" pn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" pn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("areaCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("thenComparingInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("pn "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" pn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("prefix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("thenComparingInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("pn "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" pn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lineNum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compareTo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PhoneNumber")]),a._v(" pn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" COMPARATOR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" pn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br")])]),t("h4",{attrs:{id:"특징"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#특징"}},[a._v("#")]),a._v(" 특징")]),a._v(" "),t("ul",[t("li",[a._v("약간의 성능저하")]),a._v(" "),t("li",[a._v("정적 비교자 생성 메서드들을 이름으로만 사용할 수 있어 코드가 깔끔해짐")])]),a._v(" "),t("h4",{attrs:{id:"정적-compare-메서드를-활용한-비교자"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#정적-compare-메서드를-활용한-비교자"}},[a._v("#")]),a._v(" 정적 compare 메서드를 활용한 비교자")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparator")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" hashCodeOrder "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparator")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" o1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" o2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("o1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("hasCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" o2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("h4",{attrs:{id:"비교자-생성-메서드를-활용한-비교자-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#비교자-생성-메서드를-활용한-비교자-2"}},[a._v("#")]),a._v(" 비교자 생성 메서드를 활용한 비교자")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparator")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" hashCodeOrder "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparator")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("comparingInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("o "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);