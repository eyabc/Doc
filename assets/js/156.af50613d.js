(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{567:function(s,a,t){"use strict";t.r(a);var n=t(44),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"item11-equals-를-재정의하려거든-hashcode-도-재정의하라"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#item11-equals-를-재정의하려거든-hashcode-도-재정의하라"}},[s._v("#")]),s._v(" ITEM11 equals 를 재정의하려거든 hashCode 도 재정의하라")]),s._v(" "),t("p",[s._v("equals 를 재정의 할 때는 hashCode 도 반드시 재정의 해야 한다."),t("br"),s._v("\n그렇지 않으면 프로그램이 제대로 동작하지 않을 것이다."),t("br"),s._v("\n재정의한 hashCode 는 Object 의 API 문서에 기술된 일반 규약을 따라야 한다.")]),s._v(" "),t("h2",{attrs:{id:"object-api-문서에-기술된-일반-규약"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object-api-문서에-기술된-일반-규약"}},[s._v("#")]),s._v(" Object, API 문서에 기술된 일반 규약")]),s._v(" "),t("ol",[t("li",[s._v("equals 비교에 사용되는 정보가 변경되지 않으면,\n"),t("ul",[t("li",[s._v("hashCode 메서드는 일관되게 항상 같은 값을 반환해야 한다.")])])]),s._v(" "),t("li",[s._v("equals(Object) 가 두 객체를 같다고 판단했다면,\n"),t("ul",[t("li",[s._v("두 객체의 hashCode 는 똑같은 값을 반환해야 한다.")])])]),s._v(" "),t("li",[s._v("equals(Object) 가 두 객체를 다르다고 판단했더라도\n"),t("ul",[t("li",[s._v("두 객체의 hashCode 가 서로 다른 값을 반환할 필요는 없다.")]),s._v(" "),t("li",[s._v("하지만 다른 객체에 대해서 다른 hashCode 를 반환해야 해시테이블의 성능이 좋아진다.")])])])]),s._v(" "),t("p",[s._v("앞서 [10]의 equals 만을 정의한 객체를 HashMap 의 원소로 사용할 때,")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PhoneNumber")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMpa")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PhoneNumber")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("707")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("867")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5309")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"제니"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PhoneNumber")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("707")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("867")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5309")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// null")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("위에서는 2개의 PhoneNumber 인스턴스가 사용되었다.")]),s._v(" "),t("ol",[t("li",[s._v("HashMap 에 넣을 때")]),s._v(" "),t("li",[s._v("HashMap 에서 꺼낼 때")])]),s._v(" "),t("h3",{attrs:{id:"hashcode-를-재정의-하지-않으면"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hashcode-를-재정의-하지-않으면"}},[s._v("#")]),s._v(" hashCode 를 재정의 하지 않으면")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("논리적 동치인 두 객체가 다른 해시코드 반환"),t("br"),s._v("\n→ 2번째 규약 위배")])]),s._v(" "),t("li",[t("p",[s._v("get 메서드는 엉뚱한 해시 버킷에서 객체를 찾으려함"),t("br"),s._v("\n→ 두 객체를 같은 버킷에 담아도, 결과는 같다."),t("br"),s._v("\n→ HashMap 은 hashCode 가 다른 엔트리끼리는 동치성 비교를 시도조차 하지 않기로 최적화 되어 있기 때문")])])]),s._v(" "),t("h2",{attrs:{id:"hashcode-정의하기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hashcode-정의하기"}},[s._v("#")]),s._v(" HashCode 정의하기")]),s._v(" "),t("h3",{attrs:{id:"최악의-hashcode-구현"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#최악의-hashcode-구현"}},[s._v("#")]),s._v(" 최악의 HashCode 구현")]),s._v(" "),t("p",[s._v("동치인 모든 객체에서 똑같은 해시 코드를 반환하니 적법하다.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"모든-객체에서-똑같은-값을-반환하는-문제"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#모든-객체에서-똑같은-값을-반환하는-문제"}},[s._v("#")]),s._v(" 모든 객체에서 똑같은 값을 반환하는 문제")]),s._v(" "),t("ul",[t("li",[s._v("모든 객체가 해시테이블의 버킷 하나에 담겨 마치 연결 리스트처럼 동작")]),s._v(" "),t("li",[s._v("평균 수행 시간이 O(1) 인 해시 테이블이 O(n) 으로 느려져 객체가 많아지면 도저히 쓸 수 없게 된다.")])]),s._v(" "),t("h4",{attrs:{id:"좋은-해시-함수의-특징"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#좋은-해시-함수의-특징"}},[s._v("#")]),s._v(" 좋은 해시 함수의 특징")]),s._v(" "),t("p",[s._v("서로 다른 인스턴스에 대해 다른 해시코드를 반환한다."),t("br"),s._v("\n→ hashCode 3번째 규약")]),s._v(" "),t("p",[s._v("이상적인 해시함수는 서로 다른 인스턴스들을 32비트 정수 범위에 균일하게 분배해야 한다.")]),s._v(" "),t("h3",{attrs:{id:"전형적인-hashcode-메서드"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#전형적인-hashcode-메서드"}},[s._v("#")]),s._v(" 전형적인 hashCode 메서드")]),s._v(" "),t("ul",[t("li",[s._v("핵심필드\n"),t("ul",[t("li",[s._v("equals 비교에 사용되는 필드")])])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Short")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("areaCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Short")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prefix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Short")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lineNum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ol",[t("li",[s._v("int 변수 result 를 선언한 후 값 c 로 초기화 한다.\n"),t("ul",[t("li",[t("code",[s._v("c")]),s._v(" 해당 객체의 첫번째 핵심 필드를 "),t("code",[s._v("2.i")]),s._v(" 방식으로 계산한 해시코드")])])]),s._v(" "),t("li",[s._v("나머지 핵심 필드 f 각각에 대해 다음 작업을 수행한다.\n"),t("ol",[t("li",[s._v("해당 필드의 해시코드 c 를 계산한다\n"),t("ol",[t("li",[s._v("기본 타입 필드\n"),t("ul",[t("li",[t("code",[s._v("Type.hashCode(f)")]),s._v(" Type 은 기본 타입의 박싱 클래스")])])]),s._v(" "),t("li",[s._v("참조 타입 필드\n"),t("ul",[t("li",[s._v("필드의 hashCode 를 재귀적으로 호출한다.")]),s._v(" "),t("li",[s._v("복잡하다면 필드의 표준형 nonical representation 을 만들어 표준형의 hashCode 를 호출한다.")])])]),s._v(" "),t("li",[s._v("값이 null\n"),t("ul",[t("li",[s._v("다른 상수도 괜찮지만 전통적으로 0 사용")])])]),s._v(" "),t("li",[s._v("배열\n"),t("ul",[t("li",[s._v("핵심 원소를 각각의 별도 필드처럼 다룬다.")]),s._v(" "),t("li",[s._v("각 핵심원소의 해시코드를 계산한 다음, "),t("code",[s._v("2.ii")]),s._v(" 방식으로 갱신한다.")]),s._v(" "),t("li",[s._v("핵심원소가 하나도 없다면 상수(0) 을 사용한다.")]),s._v(" "),t("li",[s._v("모든 원소가 핵심원소라면 Arrays.hashCode 를 사용")])])]),s._v(" "),t("li",[s._v("제외 필드\n"),t("ul",[t("li",[s._v("파생 필드 제외 옵션")]),s._v(" "),t("li",[s._v("equals 비교에 사용되지 않는 필드는 제외 필수.")])])])])]),s._v(" "),t("li",[t("code",[s._v("2.i")]),s._v(" 에서 계산한 해시코드 c로 result 를 갱신한다.\n"),t("ul",[t("li",[t("code",[s._v("result = 31 * result + c;")])])])])])]),s._v(" "),t("li",[s._v("result 를 반환한다.")])]),s._v(" "),t("h3",{attrs:{id:"해시-코드-최적화"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#해시-코드-최적화"}},[s._v("#")]),s._v(" 해시 코드 최적화")]),s._v(" "),t("h4",{attrs:{id:"_31-result는-필드를-곱하는-순서에-따라-result-값이-달라지게-한다"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_31-result는-필드를-곱하는-순서에-따라-result-값이-달라지게-한다"}},[s._v("#")]),s._v(" "),t("code",[s._v("31 * result")]),s._v("는 필드를 곱하는 순서에 따라 result 값이 달라지게 한다.")]),s._v(" "),t("p",[s._v("비슷한 필드가 여러개일 때 해시 효과를 크게 높여준다.")]),s._v(" "),t("ul",[t("li",[s._v("String 의 hashCode 를 곱셈 없이 구현한다면 모든 아나그램(구성 철자가 같고 순서만 다른 문자열)의 해시코드가 같아진다.")])]),s._v(" "),t("h4",{attrs:{id:"_31-로-곱하는-이유"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_31-로-곱하는-이유"}},[s._v("#")]),s._v(" 31 로 곱하는 이유")]),s._v(" "),t("p",[s._v("31 은 홀수이면서 prime 이다.")]),s._v(" "),t("ul",[t("li",[s._v("짝수라면, 오버플로가 발생한다면 정보를 잃게 된다 ??")]),s._v(" "),t("li",[s._v("소수를 곱하는 이유\n"),t("ul",[t("li",[s._v("명확하지는 않지만 전통적인 방법")])])]),s._v(" "),t("li",[s._v("곱셈을 시프트 연산과 뺄셈으로 대체해 최적화 가능\n"),t("ul",[t("li",[t("code",[s._v("31 * i")]),s._v(" == "),t("code",[s._v("(i << 5) - i)")]),s._v(" ??")])])])]),s._v(" "),t("h3",{attrs:{id:"object-클래스의-hash-메서드"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object-클래스의-hash-메서드"}},[s._v("#")]),s._v(" Object 클래스의 hash 메서드")]),s._v(" "),t("p",[s._v("임의의 개수만큼 객체를 받아 해시코드를 계산해 주는 정적 메서드")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Objects")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hash")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lineNum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prefix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" areaCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("속도는 더 느리다.\n"),t("ul",[t("li",[s._v("입력 변수를 담기 위한 배열이 생성된다.")]),s._v(" "),t("li",[s._v("기본타입은 박싱과 언박싱이 발생한다.")])])]),s._v(" "),t("li",[s._v("성능에 민감하지 않은 상황에만 사용하자")])]),s._v(" "),t("h3",{attrs:{id:"캐싱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#캐싱"}},[s._v("#")]),s._v(" 캐싱")]),s._v(" "),t("ol",[t("li",[s._v("불변 클래스")]),s._v(" "),t("li",[s._v("해시코드 계산비용이 큰 클래스")])]),s._v(" "),t("p",[s._v("이런 타입의 객체가")]),s._v(" "),t("h4",{attrs:{id:"주로-해시의-키로-사용될-것-같다면"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#주로-해시의-키로-사용될-것-같다면"}},[s._v("#")]),s._v(" 주로 해시의 키로 사용될 것 같다면,")]),s._v(" "),t("p",[s._v("인스턴스가 만들어질 때 해시코드를 계산해 둔다.")]),s._v(" "),t("h4",{attrs:{id:"해시의-키로-사용되지-않은-경우"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#해시의-키로-사용되지-않은-경우"}},[s._v("#")]),s._v(" 해시의 키로 사용되지 않은 경우")]),s._v(" "),t("p",[s._v("해시코드를 지연초기화 하려는 hasCode 메서드")]),s._v(" "),t("ul",[t("li",[s._v("스레드의 안정성까지 고려해야 한다. [83]")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" hashCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 자동으로 0으로 초기화 된다.")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Short")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("areaCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Short")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prefix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Short")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lineNum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        hashCode "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h2",{attrs:{id:"주의할-점"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#주의할-점"}},[s._v("#")]),s._v(" 주의할 점")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("성능을 위해 해시코드의 핵심필드를 생략하면 안된다.")]),s._v(" "),t("ul",[t("li",[s._v("계산 속도는 빨라지지만, 해시품질이 나빠져 해시테이블의 성능을 선형으로 떨어뜨린다.")]),s._v(" "),t("li",[s._v("실제로 자바 2 전의 String 은 최대 16개의 문자만으로 해시코드를 계산했다.\n"),t("ul",[t("li",[s._v("해당 영역의 수많은 인스턴스가 단 몇개의 해시코드로 집중된다.")])])])])]),s._v(" "),t("li",[t("p",[s._v("hashCode 가 반환하는 값의 생성 규칙을 API 사용자에게 자세히 공표하지 말자")]),s._v(" "),t("ul",[t("li",[s._v("클라이언트가 현재의 hashCode 값에 의지하지 않게 되고, 추후에 계산 방식을 바꿀 수 있다.")]),s._v(" "),t("li",[s._v("String, Integer 와 같은 자바 라이브러리의 많은 클래스에서 hashCode 메서드가 반환하는 정확한 값을 알려주는 실수를 저질렀다.\n"),t("ul",[t("li",[s._v("향후 릴리스에서 개선하기 어려워 졌음")]),s._v(" "),t("li",[s._v("결함을 고칠수 없어짐")])])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);